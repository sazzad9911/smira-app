{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Screen from \"../assets/Screen.png\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Fontisto } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport app from \"../firebase\";\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport { PhoneAuthProvider, signInWithCredential, getAuth, createUserWithEmailAndPassword, updateProfile, getRedirectResult, GoogleAuthProvider } from 'firebase/auth';\nimport AnimatedLoader from \"react-native-animated-loader\";\nimport { postData, url } from \"../action\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\nvar window = Dimensions.get('window');\n\nvar SignUp = function SignUp(props) {\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalVisible = _React$useState2[0],\n      setModalVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isOTP = _React$useState4[0],\n      setOTP = _React$useState4[1];\n\n  var auth = getAuth();\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      visibility = _React$useState6[0],\n      setVisibility = _React$useState6[1];\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: {\n        marginTop: Platform.OS == 'ios' ? 40 : 0\n      },\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          style: {\n            height: 450,\n            width: window.width\n          },\n          source: Screen\n        })\n      }), _jsxs(View, {\n        children: [_jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            setOTP(true);\n            setModalVisible(true);\n          },\n          style: {\n            height: 60,\n            margin: 20,\n            marginTop: '10%',\n            padding: 10,\n            borderRadius: 40,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            shadowOffset: {\n              height: 2,\n              width: 2\n            },\n            shadowColor: 'black',\n            shadowOpacity: .3,\n            shadowRadius: 10,\n            elevation: 4,\n            backgroundColor: '#FFFFFF'\n          },\n          children: [_jsx(FontAwesome, {\n            name: \"phone-square\",\n            size: 30,\n            color: \"red\"\n          }), _jsx(Text, {\n            style: {\n              color: 'black',\n              fontSize: 18,\n              marginLeft: 20\n            },\n            children: \"SignUp with OTP\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            setOTP(false);\n            setModalVisible(true);\n          },\n          style: {\n            height: 60,\n            margin: 20,\n            borderRadius: 40,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            shadowOffset: {\n              height: 2,\n              width: 2\n            },\n            shadowColor: 'black',\n            shadowOpacity: .3,\n            shadowRadius: 10,\n            elevation: 4,\n            backgroundColor: '#FFFFFF'\n          },\n          children: [_jsx(MaterialIcons, {\n            name: \"email\",\n            size: 30,\n            color: \"red\"\n          }), _jsx(Text, {\n            style: {\n              color: 'black',\n              fontSize: 18,\n              marginLeft: 20\n            },\n            children: \"SignUp with Email\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {},\n          style: {\n            height: 60,\n            margin: 20,\n            padding: 10,\n            borderRadius: 40,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            color: 'rgb(100,100,100)',\n            shadowOffset: {\n              height: 2,\n              width: 2\n            },\n            shadowColor: 'black',\n            shadowOpacity: .3,\n            shadowRadius: 10,\n            elevation: 4,\n            backgroundColor: '#FFFFFF'\n          },\n          children: [_jsx(Fontisto, {\n            name: \"google\",\n            size: 30,\n            color: \"red\"\n          }), _jsx(Text, {\n            style: {\n              color: 'black',\n              fontSize: 18,\n              marginLeft: 20\n            },\n            children: \"SignUp with Google\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 20\n            },\n            children: \"Already a Member?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('SignIn');\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                color: 'red'\n              },\n              children: \"Login\"\n            })\n          })]\n        })]\n      }), _jsx(Modal, {\n        animationType: \"fade\",\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          return setModalVisible(!modalVisible);\n        },\n        children: _jsx(View, {\n          children: isOTP ? _jsx(SignUpWithOtp, {\n            navigation: navigation,\n            close: setModalVisible\n          }) : _jsx(SignUpWithEmail, {\n            navigation: navigation,\n            close: setModalVisible\n          })\n        })\n      })]\n    }), _jsx(AnimatedLoader, {\n      visible: visibility,\n      overlayColor: \"rgba(255,255,255,0.75)\",\n      source: require(\"../assets/9997-infinity-loader.json\"),\n      animationStyle: styles.lottie,\n      speed: 1,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    })]\n  });\n};\n\nexport default SignUp;\n\nvar SignUpWithOtp = function SignUpWithOtp(props) {\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      next = _React$useState8[0],\n      setNext = _React$useState8[1];\n\n  var recaptchaVerifier = React.useRef(null);\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      phoneNumber = _React$useState10[0],\n      setPhoneNumber = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      verificationId = _React$useState12[0],\n      setVerificationId = _React$useState12[1];\n\n  var _React$useState13 = React.useState(),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      verificationCode = _React$useState14[0],\n      setVerificationCode = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      message = _React$useState16[0],\n      showMessage = _React$useState16[1];\n\n  var attemptInvisibleVerification = false;\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      visibility = _React$useState18[0],\n      setVisibility = _React$useState18[1];\n\n  var navigation = props.navigation;\n\n  if (next) {\n    return _jsxs(View, {\n      style: {\n        marginTop: 40\n      },\n      children: [_jsx(View, {\n        style: {\n          marginTop: '15%',\n          marginLeft: '85%'\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.close(false);\n          },\n          children: _jsx(Fontisto, {\n            name: \"close-a\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: '20%'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35\n          },\n          children: \"SignUp with OTP\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            marginTop: 20,\n            color: '#A7A7A7'\n          },\n          children: \"Register your new account\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row'\n          },\n          children: _jsx(TextInput, {\n            placeholder: \"6 digit verification code\",\n            onChangeText: setVerificationCode,\n            keyboardType: \"numeric\",\n            style: {\n              height: 60,\n              margin: 12,\n              padding: 10,\n              width: window.width - 50,\n              borderRadius: 50,\n              marginTop: 50,\n              backgroundColor: '#F5F5F5',\n              fontSize: 20\n            }\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function _callee() {\n            var credential;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (verificationCode) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    Alert.alert('Error', 'Type verificationCode first');\n                    return _context.abrupt(\"return\");\n\n                  case 3:\n                    setVisibility(true);\n                    _context.prev = 4;\n                    credential = PhoneAuthProvider.credential(verificationId, verificationCode);\n                    _context.next = 8;\n                    return _regeneratorRuntime.awrap(signInWithCredential(auth, credential).then(function (userCredential) {\n                      postData(url + '/setData', {\n                        auth: userCredential.user,\n                        tableName: 'user',\n                        columns: ['phone', 'uid'],\n                        values: [userCredential.user.phoneNumber, userCredential.user.uid]\n                      }).then(function (data) {\n                        Alert.alert('Success!', 'Sign Up completed successfully');\n                        setVisibility(false);\n                        navigation.navigate('Dashboard');\n                      });\n                    }));\n\n                  case 8:\n                    _context.next = 14;\n                    break;\n\n                  case 10:\n                    _context.prev = 10;\n                    _context.t0 = _context[\"catch\"](4);\n                    Alert.alert(_context.t0.code, _context.t0.message);\n                    setVisibility(false);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[4, 10]], Promise);\n          },\n          style: {\n            height: 60,\n            margin: 25,\n            padding: 10,\n            borderRadius: 40,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            backgroundColor: '#FC444B',\n            width: window.width - 50\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 25\n            },\n            children: \"SUBMIT\"\n          })\n        })]\n      })]\n    });\n  } else {\n    return _jsxs(View, {\n      style: {\n        marginTop: 40\n      },\n      children: [_jsx(FirebaseRecaptchaVerifierModal, {\n        ref: recaptchaVerifier,\n        firebaseConfig: app.options\n      }), _jsx(View, {\n        style: {\n          marginTop: '15%',\n          marginLeft: '85%'\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.close(false);\n          },\n          children: _jsx(Fontisto, {\n            name: \"close-a\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: '20%'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35\n          },\n          children: \"SignUp with OTP\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            marginTop: 20,\n            color: '#A7A7A7'\n          },\n          children: \"Register your new account\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          onChangeText: setPhoneNumber,\n          keyboardType: \"numeric\",\n          style: {\n            height: 60,\n            margin: 25,\n            padding: 10,\n            borderRadius: 50,\n            marginTop: 50,\n            backgroundColor: '#F5F5F5',\n            fontSize: 20,\n            width: window.width - 50\n          },\n          placeholder: \"Mobile Number with country code\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function _callee2() {\n            var phoneProvider, _verificationId;\n\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (phoneNumber) {\n                      _context2.next = 3;\n                      break;\n                    }\n\n                    Alert.alert('Error', 'It looks like you have a phone number');\n                    return _context2.abrupt(\"return\");\n\n                  case 3:\n                    if (!(phoneNumber.length != 13)) {\n                      _context2.next = 6;\n                      break;\n                    }\n\n                    Alert.alert('Error', 'Invalid phone number');\n                    return _context2.abrupt(\"return\");\n\n                  case 6:\n                    _context2.prev = 6;\n                    phoneProvider = new PhoneAuthProvider(auth);\n                    _context2.next = 10;\n                    return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n                  case 10:\n                    _verificationId = _context2.sent;\n                    setNext(true);\n                    setVerificationId(_verificationId);\n                    Alert.alert('Success', 'We sent a verification code to your phone number');\n                    setVisibility(false);\n                    _context2.next = 21;\n                    break;\n\n                  case 17:\n                    _context2.prev = 17;\n                    _context2.t0 = _context2[\"catch\"](6);\n                    Alert.alert(_context2.t0.message);\n                    setVisibility(false);\n\n                  case 21:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[6, 17]], Promise);\n          },\n          children: _jsx(View, {\n            style: {\n              height: 60,\n              margin: 25,\n              padding: 10,\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'row',\n              backgroundColor: '#FC444B',\n              width: window.width - 50\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: 25\n              },\n              children: \"NEXT\"\n            })\n          })\n        })]\n      }), _jsx(AnimatedLoader, {\n        visible: visibility,\n        overlayColor: \"rgba(255,255,255,0.75)\",\n        source: require(\"../assets/9997-infinity-loader.json\"),\n        animationStyle: styles.lottie,\n        speed: 1,\n        children: _jsx(Text, {\n          children: \"Loading...\"\n        })\n      })]\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  lottie: {\n    width: 100,\n    height: 100\n  }\n});\n\nvar SignUpWithEmail = function SignUpWithEmail(props) {\n  var navigation = props.navigation;\n\n  var _React$useState19 = React.useState(),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      Email = _React$useState20[0],\n      setEmail = _React$useState20[1];\n\n  var _React$useState21 = React.useState(),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      Password = _React$useState22[0],\n      setPassword = _React$useState22[1];\n\n  var _React$useState23 = React.useState(),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      Name = _React$useState24[0],\n      setName = _React$useState24[1];\n\n  var _React$useState25 = React.useState(false),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      visibility = _React$useState26[0],\n      setVisibility = _React$useState26[1];\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: {\n        marginTop: 40\n      },\n      children: [_jsx(View, {\n        style: {\n          marginTop: '15%',\n          marginLeft: '85%'\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.close(false);\n          },\n          children: _jsx(Fontisto, {\n            name: \"close-a\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: '20%'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35\n          },\n          children: \"Hello, New Member!\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            marginTop: 20,\n            color: '#A7A7A7'\n          },\n          children: \"Register your new account\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(TextInput, {\n            onChangeText: setName,\n            placeholder: \"Name\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 30,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          }), _jsx(TextInput, {\n            onChangeText: setEmail,\n            placeholder: \"Email\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 10,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          }), _jsx(TextInput, {\n            onChange: setPassword,\n            placeholder: \"Password\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 10,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          })]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            if (!Email || !Password || !Name) {\n              Alert.alert(\"Opps!\", \"Please fill all the fields\");\n              return;\n            }\n\n            setVisibility(true);\n\n            if (!auth) {\n              console.log('no auth');\n              return;\n            }\n\n            createUserWithEmailAndPassword(auth, Email, Password).then(function (userCredentials) {\n              postData(url + '/setData', {\n                auth: userCredentials.user,\n                tableName: 'user',\n                columns: ['name', 'email', 'uid'],\n                values: [Name, Email, userCredentials.user.uid]\n              }).then(function (data) {\n                Alert.alert('Success!', 'Successfully sign up completed');\n                setVisibility(false);\n                navigation.navigate('Dashboard');\n              });\n            }).catch(function (err) {\n              Alert.alert('Error', err.code);\n              setVisibility(false);\n            });\n          },\n          children: _jsx(View, {\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 10,\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'row',\n              backgroundColor: '#FC444B',\n              shadowOffset: {\n                height: 2,\n                width: 2\n              },\n              shadowColor: 'black',\n              shadowOpacity: .3,\n              shadowRadius: 10,\n              elevation: 4,\n              width: window.width - 50,\n              marginVertical: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: 18\n              },\n              children: \"SIGNUP\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: window.width - 40,\n            height: 2,\n            backgroundColor: '#0000008e',\n            marginLeft: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          children: _jsxs(View, {\n            style: {\n              height: 60,\n              margin: 20,\n              padding: 10,\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'row',\n              shadowOffset: {\n                height: 2,\n                width: 2\n              },\n              shadowColor: 'black',\n              shadowOpacity: .3,\n              shadowRadius: 10,\n              elevation: 4,\n              backgroundColor: '#FFFFF3'\n            },\n            children: [_jsx(AntDesign, {\n              name: \"google\",\n              size: 30,\n              color: \"black\"\n            }), _jsx(Text, {\n              style: {\n                color: '#000000',\n                fontSize: 18,\n                marginLeft: 30\n              },\n              children: \"Continue with Google\"\n            })]\n          })\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '10%'\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 20\n            },\n            children: \"Already a Member?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('SignIn');\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                color: 'red'\n              },\n              children: \"Login\"\n            })\n          })]\n        })]\n      })]\n    }), _jsx(AnimatedLoader, {\n      visible: visibility,\n      overlayColor: \"rgba(255,255,255,0.75)\",\n      source: require(\"../assets/9997-infinity-loader.json\"),\n      animationStyle: styles.lottie,\n      speed: 1,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    })]\n  });\n};","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/screens/SignUp.js"],"names":["React","Screen","FontAwesome","MaterialIcons","Fontisto","AntDesign","app","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","PhoneAuthProvider","signInWithCredential","getAuth","createUserWithEmailAndPassword","updateProfile","getRedirectResult","GoogleAuthProvider","AnimatedLoader","postData","url","auth","window","Dimensions","get","SignUp","props","navigation","useState","modalVisible","setModalVisible","isOTP","setOTP","visibility","setVisibility","marginTop","Platform","OS","height","width","margin","padding","borderRadius","justifyContent","alignItems","flexDirection","shadowOffset","shadowColor","shadowOpacity","shadowRadius","elevation","backgroundColor","color","fontSize","marginLeft","navigate","require","styles","lottie","SignUpWithOtp","next","setNext","recaptchaVerifier","useRef","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verificationCode","setVerificationCode","message","showMessage","attemptInvisibleVerification","close","Alert","alert","credential","then","userCredential","user","tableName","columns","values","uid","data","code","options","length","phoneProvider","verifyPhoneNumber","current","StyleSheet","create","SignUpWithEmail","Email","setEmail","Password","setPassword","Name","setName","marginHorizontal","console","log","userCredentials","catch","err","marginVertical"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View, Modal, Text, ScrollView, Image,\r\n    TouchableOpacity, TextInput, Dimensions, Platform, StyleSheet, Alert\r\n} from 'react-native';\r\nimport Screen from '../assets/Screen.png'\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { Fontisto } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport app from '../firebase'\r\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\r\nimport {\r\n    PhoneAuthProvider, signInWithCredential, getAuth,\r\n    createUserWithEmailAndPassword, updateProfile, getRedirectResult, GoogleAuthProvider\r\n} from 'firebase/auth';\r\nimport AnimatedLoader from \"react-native-animated-loader\";\r\nimport { postData, url } from '../action'\r\n//import * as Google from 'expo-google-app-auth';\r\nconst auth = getAuth();\r\nconst window = Dimensions.get('window')\r\n\r\nconst SignUp = (props) => {\r\n    const navigation = props.navigation\r\n    const [modalVisible, setModalVisible] = React.useState(false);\r\n    const [isOTP, setOTP] = React.useState(false);\r\n    const auth = getAuth();\r\n    const [visibility, setVisibility] = React.useState(false);\r\n\r\n\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={{\r\n                marginTop: Platform.OS == 'ios' ? 40 : 0,\r\n            }}>\r\n                <View>\r\n                    <Image\r\n                        style={{\r\n                            height: 450,\r\n                            width: window.width,\r\n                        }}\r\n                        source={Screen}\r\n                    />\r\n                </View>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => {\r\n                        setOTP(true);\r\n                        setModalVisible(true)\r\n                    }} style={{\r\n                        height: 60,\r\n                        margin: 20,\r\n                        marginTop: '10%',\r\n                        padding: 10,\r\n                        borderRadius: 40,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'row',\r\n                        shadowOffset: {\r\n                            height: 2, width: 2,\r\n                        },\r\n                        shadowColor: 'black',\r\n                        shadowOpacity: .3,\r\n                        shadowRadius: 10,\r\n                        elevation: 4,\r\n                        backgroundColor: '#FFFFFF',\r\n                    }}>\r\n\r\n                        <FontAwesome name=\"phone-square\" size={30} color=\"red\" />\r\n                        <Text style={{\r\n                            color: 'black',\r\n                            fontSize: 18,\r\n                            marginLeft: 20\r\n                        }}>SignUp with OTP</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={() => {\r\n                        setOTP(false);\r\n                        setModalVisible(true)\r\n                    }} style={{\r\n                        height: 60,\r\n                        margin: 20,\r\n                        borderRadius: 40,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'row',\r\n                        shadowOffset: {\r\n                            height: 2, width: 2,\r\n                        },\r\n                        shadowColor: 'black',\r\n                        shadowOpacity: .3,\r\n                        shadowRadius: 10,\r\n                        elevation: 4,\r\n                        backgroundColor: '#FFFFFF',\r\n                    }}>\r\n                        <MaterialIcons name=\"email\" size={30} color=\"red\" />\r\n                        <Text style={{\r\n                            color: 'black',\r\n                            fontSize: 18,\r\n                            marginLeft: 20\r\n                        }}>SignUp with Email</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={() => {\r\n\r\n                    }} style={{\r\n                        height: 60,\r\n                        margin: 20,\r\n                        padding: 10,\r\n                        borderRadius: 40,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'row',\r\n                        color: 'rgb(100,100,100)',\r\n                        shadowOffset: {\r\n                            height: 2, width: 2,\r\n                        },\r\n                        shadowColor: 'black',\r\n                        shadowOpacity: .3,\r\n                        shadowRadius: 10,\r\n                        elevation: 4,\r\n                        backgroundColor: '#FFFFFF',\r\n                    }}>\r\n\r\n                        <Fontisto name=\"google\" size={30} color=\"red\" />\r\n                        <Text style={{\r\n                            color: 'black',\r\n                            fontSize: 18,\r\n                            marginLeft: 20\r\n                        }}>SignUp with Google</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Text style={{\r\n                            fontSize: 20\r\n                        }}>Already a Member?</Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('SignIn')}>\r\n                            <Text style={{\r\n                                fontSize: 20,\r\n                                color: 'red',\r\n                            }}>Login</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n\r\n                <Modal animationType=\"fade\"\r\n                    visible={modalVisible}\r\n                    onRequestClose={() => setModalVisible(!modalVisible)}>\r\n                    <View>\r\n                        {\r\n                            isOTP ?\r\n                                (\r\n                                    <SignUpWithOtp navigation={navigation} close={setModalVisible} />\r\n                                ) : (\r\n                                    <SignUpWithEmail navigation={navigation} close={setModalVisible} />\r\n                                )\r\n                        }\r\n                    </View>\r\n                </Modal>\r\n\r\n            </View>\r\n            <AnimatedLoader\r\n                visible={visibility}\r\n                overlayColor=\"rgba(255,255,255,0.75)\"\r\n                source={require(\"../assets/9997-infinity-loader.json\")}\r\n                animationStyle={styles.lottie}\r\n                speed={1}\r\n            >\r\n                <Text>Loading...</Text>\r\n            </AnimatedLoader>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\nconst SignUpWithOtp = (props) => {\r\n    const [next, setNext] = React.useState(false)\r\n    const recaptchaVerifier = React.useRef(null);\r\n    const [phoneNumber, setPhoneNumber] = React.useState();\r\n    const [verificationId, setVerificationId] = React.useState();\r\n    const [verificationCode, setVerificationCode] = React.useState();\r\n    const [message, showMessage] = React.useState();\r\n    const attemptInvisibleVerification = false;\r\n    const [visibility, setVisibility] = React.useState(false);\r\n\r\n    const navigation = props.navigation\r\n\r\n    if (next) {\r\n        return (\r\n            <View style={{\r\n                marginTop: 40,\r\n            }}>\r\n                <View style={{\r\n                    marginTop: '15%',\r\n                    marginLeft: '85%'\r\n                }}>\r\n                    <TouchableOpacity onPress={() => {\r\n                        props.close(false)\r\n                    }}>\r\n                        <Fontisto name=\"close-a\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: '20%',\r\n                }}>\r\n                    <Text style={{\r\n                        fontSize: 35,\r\n                    }}>SignUp with OTP</Text>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        marginTop: 20,\r\n                        color: '#A7A7A7'\r\n                    }}>Register your new account</Text>\r\n                </View>\r\n\r\n                <View >\r\n                    <View style={{\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'row',\r\n                    }}>\r\n\r\n                        <TextInput placeholder='6 digit verification code'\r\n                            onChangeText={setVerificationCode}\r\n                            keyboardType='numeric'\r\n                            style={{\r\n                                height: 60,\r\n                                margin: 12,\r\n                                padding: 10,\r\n                                width: window.width - 50,\r\n                                borderRadius: 50,\r\n                                marginTop: 50,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 20,\r\n                            }}\r\n                        />\r\n                    </View>\r\n\r\n\r\n                    <TouchableOpacity onPress={\r\n                        async () => {\r\n                            if (!verificationCode) {\r\n                                Alert.alert('Error', 'Type verificationCode first');\r\n                                return;\r\n                            }\r\n                            setVisibility(true);\r\n                            try {\r\n                                const credential = PhoneAuthProvider.credential(\r\n                                    verificationId,\r\n                                    verificationCode\r\n                                );\r\n                                await signInWithCredential(auth, credential)\r\n                                    .then(userCredential => {\r\n                                        postData(url + '/setData', {\r\n                                            auth: userCredential.user,\r\n                                            tableName: 'user',\r\n                                            columns: ['phone', 'uid'],\r\n                                            values: [userCredential.user.phoneNumber, userCredential.user.uid]\r\n                                        }).then(data => {\r\n                                            Alert.alert('Success!', 'Sign Up completed successfully')\r\n                                            setVisibility(false)\r\n                                            navigation.navigate('Dashboard');\r\n                                        })\r\n                                    })\r\n                            } catch (err) {\r\n                                Alert.alert(err.code, err.message)\r\n                                setVisibility(false)\r\n                            }\r\n                        }\r\n                    } style={{\r\n                        height: 60,\r\n                        margin: 25,\r\n                        padding: 10,\r\n                        borderRadius: 40,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'row',\r\n                        backgroundColor: '#FC444B',\r\n                        width: window.width - 50\r\n                    }}>\r\n                        <Text style={{\r\n                            color: 'white',\r\n                            fontSize: 25,\r\n                        }}>SUBMIT</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    } else {\r\n        return (\r\n            <View style={{\r\n                marginTop: 40,\r\n            }}>\r\n                <FirebaseRecaptchaVerifierModal\r\n                    ref={recaptchaVerifier}\r\n                    firebaseConfig={app.options}\r\n                // attemptInvisibleVerification\r\n                />\r\n                <View style={{\r\n                    marginTop: '15%',\r\n                    marginLeft: '85%'\r\n                }}>\r\n                    <TouchableOpacity onPress={() => props.close(false)}>\r\n                        <Fontisto name=\"close-a\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: '20%',\r\n                }}>\r\n                    <Text style={{\r\n                        fontSize: 35,\r\n                    }}>SignUp with OTP</Text>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        marginTop: 20,\r\n                        color: '#A7A7A7'\r\n                    }}>Register your new account</Text>\r\n                </View>\r\n\r\n                <View >\r\n                    <TextInput onChangeText={setPhoneNumber} keyboardType='numeric'\r\n                        style={{\r\n                            height: 60,\r\n                            margin: 25,\r\n                            padding: 10,\r\n                            borderRadius: 50,\r\n                            marginTop: 50,\r\n                            backgroundColor: '#F5F5F5',\r\n                            fontSize: 20,\r\n                            width: window.width - 50\r\n                        }}\r\n                        placeholder=\"Mobile Number with country code\"\r\n                    />\r\n\r\n                    <TouchableOpacity onPress={async () => {\r\n\r\n                        //setVisibility(true)\r\n                        if (!phoneNumber) {\r\n                            Alert.alert('Error', 'It looks like you have a phone number')\r\n                            return;\r\n                        }\r\n                        if (phoneNumber.length != 13) {\r\n                            Alert.alert('Error', 'Invalid phone number');\r\n                            return;\r\n                        }\r\n                        try {\r\n                            const phoneProvider = new PhoneAuthProvider(auth);\r\n                            const verificationId = await phoneProvider.verifyPhoneNumber(\r\n                                phoneNumber,\r\n                                recaptchaVerifier.current\r\n                            );\r\n                            setNext(true)\r\n                            setVerificationId(verificationId);\r\n                            Alert.alert('Success', 'We sent a verification code to your phone number')\r\n                            setVisibility(false)\r\n                        } catch (err) {\r\n                            Alert.alert(err.message)\r\n                            setVisibility(false)\r\n                        }\r\n\r\n\r\n                    }}>\r\n                        <View style={{\r\n                            height: 60,\r\n                            margin: 25,\r\n                            padding: 10,\r\n                            borderRadius: 40,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'row',\r\n                            backgroundColor: '#FC444B',\r\n                            width: window.width - 50,\r\n                        }}>\r\n                            <Text style={{\r\n                                color: 'white',\r\n                                fontSize: 25,\r\n                            }}>NEXT</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <AnimatedLoader\r\n                    visible={visibility}\r\n                    overlayColor=\"rgba(255,255,255,0.75)\"\r\n                    source={require(\"../assets/9997-infinity-loader.json\")}\r\n                    animationStyle={styles.lottie}\r\n                    speed={1}\r\n                >\r\n                    <Text>Loading...</Text>\r\n                </AnimatedLoader>\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    lottie: {\r\n        width: 100,\r\n        height: 100\r\n    }\r\n});\r\n\r\nconst SignUpWithEmail = (props) => {\r\n    const navigation = props.navigation\r\n    const [Email, setEmail] = React.useState()\r\n    const [Password, setPassword] = React.useState()\r\n    const [Name, setName] = React.useState()\r\n    const [visibility, setVisibility] = React.useState(false);\r\n    return (\r\n        <ScrollView>\r\n            <View style={{\r\n                marginTop: 40,\r\n            }}>\r\n                <View style={{\r\n                    marginTop: '15%',\r\n                    marginLeft: '85%'\r\n                }}>\r\n                    <TouchableOpacity onPress={() => {\r\n                        props.close(false)\r\n                    }}>\r\n                        <Fontisto name=\"close-a\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: '20%',\r\n                }}>\r\n                    <Text style={{\r\n                        fontSize: 35,\r\n                    }}>Hello, New Member!</Text>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        marginTop: 20,\r\n                        color: '#A7A7A7'\r\n                    }}>Register your new account</Text>\r\n                </View>\r\n\r\n                <View >\r\n                    <View style={{\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n\r\n                        <TextInput onChangeText={setName} placeholder='Name'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 30,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <TextInput onChangeText={setEmail} placeholder='Email'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 10,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n\r\n                        <TextInput onChange={setPassword} placeholder='Password'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 10,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n\r\n                    <TouchableOpacity onPress={() => {\r\n                        if (!Email || !Password || !Name) {\r\n                            Alert.alert(\"Opps!\", \"Please fill all the fields\")\r\n                            return\r\n                        }\r\n                        setVisibility(true)\r\n                        if(!auth){\r\n                            console.log('no auth');\r\n                            return\r\n                        }\r\n                        createUserWithEmailAndPassword(auth, Email, Password)\r\n                            .then(userCredentials => {\r\n                                postData(url +'/setData', {\r\n                                    auth:userCredentials.user,\r\n                                    tableName: 'user',\r\n                                    columns: ['name', 'email','uid'],\r\n                                    values:[Name,Email,userCredentials.user.uid]\r\n                                }).then(data => {\r\n                                    Alert.alert('Success!', 'Successfully sign up completed')\r\n                                    setVisibility(false)\r\n                                    navigation.navigate('Dashboard')\r\n                                })\r\n                            }).catch(err => {\r\n                                Alert.alert('Error', err.code)\r\n                                setVisibility(false)\r\n                                //console.log(err.message)\r\n                            })\r\n                    }}>\r\n                        <View style={{\r\n                            height: 60,\r\n                            marginHorizontal: 25,\r\n                            padding: 10,\r\n                            borderRadius: 40,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'row',\r\n                            backgroundColor: '#FC444B',\r\n                            shadowOffset: {\r\n                                height: 2, width: 2,\r\n                            },\r\n                            shadowColor: 'black',\r\n                            shadowOpacity: .3,\r\n                            shadowRadius: 10,\r\n                            elevation: 4,\r\n                            width: window.width - 50,\r\n                            marginVertical: 10\r\n                        }}>\r\n                            <Text style={{\r\n                                color: 'white',\r\n                                fontSize: 18,\r\n                            }}>SIGNUP</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{\r\n                        width: window.width - 40, height: 2,\r\n                        backgroundColor: '#0000008e', marginLeft: 20\r\n                    }}></View>\r\n                    <TouchableOpacity >\r\n                        <View style={{\r\n                            height: 60,\r\n                            margin: 20,\r\n                            padding: 10,\r\n                            borderRadius: 40,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'row',\r\n                            shadowOffset: {\r\n                                height: 2, width: 2,\r\n                            },\r\n                            shadowColor: 'black',\r\n                            shadowOpacity: .3,\r\n                            shadowRadius: 10,\r\n                            elevation: 4,\r\n                            backgroundColor: '#FFFFF3',\r\n                        }}>\r\n                            <AntDesign name=\"google\" size={30} color=\"black\" />\r\n                            <Text style={{\r\n                                color: '#000000',\r\n                                fontSize: 18,\r\n                                marginLeft: 30\r\n                            }}>Continue with Google</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: '10%'\r\n                    }}>\r\n                        <Text style={{\r\n                            fontSize: 20\r\n                        }}>Already a Member?</Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('SignIn')}>\r\n                            <Text style={{\r\n                                fontSize: 20,\r\n                                color: 'red',\r\n                            }}>Login</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <AnimatedLoader\r\n                visible={visibility}\r\n                overlayColor=\"rgba(255,255,255,0.75)\"\r\n                source={require(\"../assets/9997-infinity-loader.json\")}\r\n                animationStyle={styles.lottie}\r\n                speed={1}\r\n            >\r\n                <Text>Loading...</Text>\r\n            </AnimatedLoader>\r\n        </ScrollView>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}