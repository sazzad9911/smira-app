{"ast":null,"code":"'use strict';\n\nvar VISCOUS_FLUID_SCALE = 8;\nvar VISCOUS_FLUID_NORMALIZE = 1 / viscousFluid(1);\nvar VISCOUS_FLUID_OFFSET = 1 - VISCOUS_FLUID_NORMALIZE * viscousFluid(1);\n\nfunction viscousFluid(x) {\n  x *= VISCOUS_FLUID_SCALE;\n\n  if (x < 1) {\n    x -= 1 - Math.exp(-x);\n  } else {\n    var start = 0.36787944117;\n    x = 1 - Math.exp(1 - x);\n    x = start + x * (1 - start);\n  }\n\n  return x;\n}\n\nvar ViscousFluidInterpolator = {\n  getInterpolation: function getInterpolation(input) {\n    var interpolated = VISCOUS_FLUID_NORMALIZE * viscousFluid(input);\n\n    if (interpolated > 0) {\n      return interpolated + VISCOUS_FLUID_OFFSET;\n    }\n\n    return interpolated;\n  }\n};\nexport default ViscousFluidInterpolator;","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/node_modules/react-native-image-gallery/src/libraries/Scroller/ViscousFluidInterpolator.js"],"names":["VISCOUS_FLUID_SCALE","VISCOUS_FLUID_NORMALIZE","viscousFluid","VISCOUS_FLUID_OFFSET","x","Math","exp","start","ViscousFluidInterpolator","getInterpolation","input","interpolated"],"mappings":"AAAA;;AAEA,IAAMA,mBAAmB,GAAG,CAA5B;AACA,IAAMC,uBAAuB,GAAG,IAAIC,YAAY,CAAC,CAAD,CAAhD;AACA,IAAMC,oBAAoB,GAAG,IAAIF,uBAAuB,GAAGC,YAAY,CAAC,CAAD,CAAvE;;AAEA,SAASA,YAAT,CAAuBE,CAAvB,EAA0B;AACtBA,EAAAA,CAAC,IAAIJ,mBAAL;;AACA,MAAII,CAAC,GAAG,CAAR,EAAW;AACPA,IAAAA,CAAC,IAAK,IAAIC,IAAI,CAACC,GAAL,CAAS,CAACF,CAAV,CAAV;AACH,GAFD,MAEO;AACH,QAAIG,KAAK,GAAG,aAAZ;AACAH,IAAAA,CAAC,GAAG,IAAIC,IAAI,CAACC,GAAL,CAAS,IAAIF,CAAb,CAAR;AACAA,IAAAA,CAAC,GAAGG,KAAK,GAAGH,CAAC,IAAI,IAAIG,KAAR,CAAb;AACH;;AACD,SAAOH,CAAP;AACH;;AAED,IAAMI,wBAAwB,GAAG;AAC7BC,EAAAA,gBAAgB,EAAE,0BAAUC,KAAV,EAAiB;AAC/B,QAAIC,YAAY,GAAGV,uBAAuB,GAAGC,YAAY,CAACQ,KAAD,CAAzD;;AACA,QAAIC,YAAY,GAAG,CAAnB,EAAsB;AAClB,aAAOA,YAAY,GAAGR,oBAAtB;AACH;;AACD,WAAOQ,YAAP;AACH;AAP4B,CAAjC;AAUA,eAAeH,wBAAf","sourcesContent":["'use strict';\n\nconst VISCOUS_FLUID_SCALE = 8;\nconst VISCOUS_FLUID_NORMALIZE = 1 / viscousFluid(1);\nconst VISCOUS_FLUID_OFFSET = 1 - VISCOUS_FLUID_NORMALIZE * viscousFluid(1);\n\nfunction viscousFluid (x) {\n    x *= VISCOUS_FLUID_SCALE;\n    if (x < 1) {\n        x -= (1 - Math.exp(-x));\n    } else {\n        var start = 0.36787944117;   // 1/e == exp(-1)\n        x = 1 - Math.exp(1 - x);\n        x = start + x * (1 - start);\n    }\n    return x;\n}\n\nconst ViscousFluidInterpolator = {\n    getInterpolation: function (input) {\n        var interpolated = VISCOUS_FLUID_NORMALIZE * viscousFluid(input);\n        if (interpolated > 0) {\n            return interpolated + VISCOUS_FLUID_OFFSET;\n        }\n        return interpolated;\n    }\n};\n\nexport default ViscousFluidInterpolator;\n"]},"metadata":{},"sourceType":"module"}