{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport LottieAnimation from 'lottie-react-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AnimatedLoader = function (_React$PureComponent) {\n  _inherits(AnimatedLoader, _React$PureComponent);\n\n  var _super = _createSuper(AnimatedLoader);\n\n  function AnimatedLoader() {\n    var _this;\n\n    _classCallCheck(this, AnimatedLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.animation = React.createRef();\n\n    _this._renderLottie = function () {\n      var _this$props = _this.props,\n          source = _this$props.source,\n          animationStyle = _this$props.animationStyle,\n          speed = _this$props.speed,\n          loop = _this$props.loop;\n      return _jsx(LottieAnimation, {\n        ref: _this.animation,\n        source: source,\n        loop: loop,\n        speed: speed,\n        style: [styles.animationStyle, animationStyle]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimatedLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.animation.current) {\n        this.animation.current.play();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var visible = this.props.visible;\n\n      if (visible !== prevProps.visible) {\n        if (this.animation.current) {\n          this.animation.current.play();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          visible = _this$props2.visible,\n          overlayColor = _this$props2.overlayColor,\n          animationType = _this$props2.animationType;\n      return _jsx(Modal, {\n        transparent: true,\n        visible: visible,\n        animationType: animationType,\n        supportedOrientations: ['portrait'],\n        onRequestClose: function onRequestClose() {},\n        children: _jsxs(View, {\n          style: [styles.container, {\n            backgroundColor: overlayColor\n          }],\n          children: [_jsx(View, {\n            children: this._renderLottie()\n          }), this.props.children]\n        })\n      });\n    }\n  }]);\n\n  return AnimatedLoader;\n}(React.PureComponent);\n\nAnimatedLoader.defaultProps = {\n  visible: false,\n  overlayColor: 'rgba(0, 0, 0, 0.25)',\n  animationType: 'none',\n  source: require(\"./loader.json\"),\n  animationStyle: {},\n  speed: 1,\n  loop: true\n};\nAnimatedLoader.propTypes = {\n  visible: PropTypes.bool,\n  overlayColor: PropTypes.string,\n  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n  source: PropTypes.object,\n  animationStyle: ViewPropTypes.style,\n  speed: PropTypes.number,\n  loop: PropTypes.bool\n};\nexport { AnimatedLoader as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  animationStyle: {\n    height: '100%',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/node_modules/react-native-animated-loader/src/index.js"],"names":["React","ViewPropTypes","PropTypes","LottieAnimation","AnimatedLoader","animation","createRef","_renderLottie","props","source","animationStyle","speed","loop","styles","current","play","prevProps","visible","overlayColor","animationType","container","backgroundColor","children","PureComponent","defaultProps","require","propTypes","bool","string","oneOf","object","style","number","StyleSheet","create","flex","position","top","bottom","left","right","alignItems","justifyContent","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Modal, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport LottieAnimation from 'lottie-react-native';\n\nexport default class AnimatedLoader extends React.PureComponent {\n  static defaultProps = {\n    visible: false,\n    overlayColor: 'rgba(0, 0, 0, 0.25)',\n    animationType: 'none',\n    source: require('./loader.json'),\n    animationStyle: {},\n    speed: 1,\n    loop: true,\n  };\n\n  static propTypes = {\n    visible: PropTypes.bool,\n    overlayColor: PropTypes.string,\n    animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n    source: PropTypes.object,\n    animationStyle: ViewPropTypes.style,\n    speed: PropTypes.number,\n    loop: PropTypes.bool,\n  };\n\n  animation = React.createRef();\n\n  componentDidMount() {\n    if (this.animation.current) {\n      this.animation.current.play();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible } = this.props;\n    if (visible !== prevProps.visible) {\n      if (this.animation.current) {\n        this.animation.current.play();\n      }\n    }\n  }\n\n  _renderLottie = () => {\n    const { source, animationStyle, speed, loop } = this.props;\n    return (\n      <LottieAnimation\n        ref={this.animation}\n        source={source}\n        loop={loop}\n        speed={speed}\n        style={[styles.animationStyle, animationStyle]}\n      />\n    );\n  };\n\n  render() {\n    const { visible, overlayColor, animationType } = this.props;\n\n    return (\n      <Modal\n        transparent\n        visible={visible}\n        animationType={animationType}\n        supportedOrientations={['portrait']}\n        onRequestClose={() => {}}\n      >\n        <View style={[styles.container, { backgroundColor: overlayColor }]}>\n          <View>{this._renderLottie()}</View>\n          {this.props.children}\n        </View>\n      </Modal>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  animationStyle: {\n    height: '100%',\n    width: '100%',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}