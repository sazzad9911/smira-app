{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState } from 'react';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Cards from \"../components/Cards\";\nimport { getData, storeData } from \"./Search\";\nimport { useSelector } from 'react-redux';\nimport { postData, url } from \"../action\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchHotel = function SearchHotel(props) {\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      SearchParam = _React$useState2[0],\n      setSearchParams = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      HotelData = _React$useState4[0],\n      setHotelData = _React$useState4[1];\n\n  var recentSearch = useSelector(function (state) {\n    return state.recentSearch;\n  });\n  React.useEffect(function () {\n    getData('search').then(function (data) {\n      if (data) {\n        setSearchParams(data[data.length - 1]);\n      }\n    });\n  }, []);\n  React.useEffect(function () {\n    postData(url + '/searchData', {\n      tableName: 'hotels',\n      searchColumn: 'name',\n      searchData: SearchParam,\n      orderColumn: recentSearch.shortBy,\n      filterColumn: 'categories',\n      filterValue: recentSearch.category,\n      betweenColumn: 'ratings',\n      betweenB: recentSearch.rating,\n      betweenA: recentSearch.rating - 1\n    }).then(function (data) {\n      if (Array.isArray(data)) {\n        setHotelData(data);\n        return;\n      }\n\n      console.log(data.message);\n    }).catch(function (err) {\n      console.log('Error: SearchHotel.js->' + err.message);\n    });\n  }, [SearchParam + recentSearch.shortBy + recentSearch.rating + recentSearch.category]);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Header, {\n      onChange: setSearchParams,\n      search: SearchParam,\n      navigation: navigation\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        padding: 5,\n        justifyContent: 'space-between',\n        paddingHorizontal: 10\n      },\n      children: [_jsxs(Text, {\n        children: [HotelData ? HotelData.length : '0', \" Deals Found\"]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(MaterialIcons, {\n          name: \"verified\",\n          size: 24,\n          color: \"green\"\n        }), _jsx(Text, {\n          style: {\n            marginLeft: 5\n          },\n          children: \"Free For Members\"\n        })]\n      })]\n    }), HotelData ? HotelData.map(function (doc) {\n      return _jsx(Cards, {\n        doc: doc,\n        navigation: navigation,\n        img: {\n          uri: doc.image\n        },\n        title: doc.name,\n        address: doc.address,\n        rating: doc.ratings\n      }, doc.id);\n    }) : _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#FA454B\"\n    })]\n  });\n};\n\nexport default SearchHotel;\nexport var Header = function Header(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState('Hotels'),\n      _useState2 = _slicedToArray(_useState, 2),\n      SearchParam = _useState2[0],\n      setSearchParams = _useState2[1];\n\n  return _jsxs(View, {\n    style: {\n      backgroundColor: \"#FA454B\",\n      width: '100%',\n      minHeight: 100,\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingLeft: 10,\n      paddingRight: 10,\n      paddingTop: Platform.OS == 'ios' ? 40 : 0\n    },\n    children: [_jsxs(View, {\n      style: {\n        width: '90%',\n        backgroundColor: 'white',\n        height: 50,\n        borderRadius: 50,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsx(TextInput, {\n        value: props.search,\n        onChangeText: props.onChange,\n        style: {\n          flex: 5,\n          paddingLeft: 20\n        },\n        placeholder: \"Search\",\n        placeholderTextColor: 'rgb(130,130,130)'\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('SearchDeal');\n        },\n        style: {\n          flex: 2,\n          backgroundColor: 'rgb(220,220,220)',\n          height: '100%',\n          borderTopRightRadius: 30,\n          borderBottomRightRadius: 30,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'rgb(130,130,130)'\n          },\n          children: \"Hotels\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Home');\n      },\n      style: {\n        width: '10%',\n        alignItems: 'flex-end'\n      },\n      children: _jsx(MaterialIcons, {\n        name: \"close\",\n        size: 24,\n        color: \"white\"\n      })\n    })]\n  });\n};","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/screens/SearchHotel.js"],"names":["React","useState","MaterialIcons","Cards","getData","storeData","useSelector","postData","url","SearchHotel","props","navigation","SearchParam","setSearchParams","HotelData","setHotelData","recentSearch","state","useEffect","then","data","length","tableName","searchColumn","searchData","orderColumn","shortBy","filterColumn","filterValue","category","betweenColumn","betweenB","rating","betweenA","Array","isArray","console","log","message","catch","err","flexDirection","padding","justifyContent","paddingHorizontal","marginLeft","map","doc","uri","image","name","address","ratings","id","Header","backgroundColor","width","minHeight","alignItems","paddingLeft","paddingRight","paddingTop","Platform","OS","height","borderRadius","search","onChange","flex","navigate","borderTopRightRadius","borderBottomRightRadius","color"],"mappings":"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","sourcesContent":["import { Image, ScrollView, StyleSheet, Text, TextInput,\r\n     TouchableOpacity, View, Platform, Dimensions, ActivityIndicator } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\nimport Cards from '../components/Cards';\r\nimport { getData, storeData } from './Search'\r\nimport { useSelector } from 'react-redux';\r\nimport { postData, url } from '../action';\r\n\r\nconst SearchHotel = (props) => {\r\n    const navigation = props.navigation\r\n    const [SearchParam, setSearchParams] = React.useState(null)\r\n    const [HotelData, setHotelData] = React.useState(null)\r\n    const recentSearch=useSelector(state => state.recentSearch);\r\n\r\n    React.useEffect(() => {\r\n        getData('search').then((data) => {\r\n            if (data) {\r\n                setSearchParams(data[data.length - 1])\r\n                //console.log(data[data.length - 1])\r\n            }\r\n        })\r\n    },[])\r\n    React.useEffect(() => {\r\n        //console.log(recentSearch)\r\n        postData(url + '/searchData', {\r\n            tableName: 'hotels',\r\n            searchColumn: 'name',\r\n            searchData: SearchParam,\r\n            orderColumn:recentSearch.shortBy,\r\n            filterColumn:'categories',\r\n            filterValue:recentSearch.category,\r\n            betweenColumn:'ratings',\r\n            betweenB:recentSearch.rating,\r\n            betweenA:recentSearch.rating-1,\r\n\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                setHotelData(data)\r\n                return\r\n            }\r\n            console.log(data.message)\r\n        }).catch(err => {\r\n            console.log('Error: SearchHotel.js->'+ err.message)\r\n        })\r\n    }, [SearchParam+recentSearch.shortBy+recentSearch.rating+recentSearch.category])\r\n    return (\r\n        <ScrollView>\r\n            <Header onChange={setSearchParams} search={SearchParam}\r\n                navigation={navigation} />\r\n            <View style={{\r\n                flexDirection: 'row',\r\n                padding: 5,\r\n                justifyContent: 'space-between',\r\n                paddingHorizontal: 10\r\n            }}>\r\n                <Text>{HotelData? HotelData.length:'0'} Deals Found</Text>\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <MaterialIcons name=\"verified\" size={24} color=\"green\" />\r\n                    <Text style={{ marginLeft: 5 }}>Free For Members</Text>\r\n                </View>\r\n            </View>\r\n            {\r\n                HotelData ? (\r\n                    HotelData.map(doc => (\r\n                        <Cards key={doc.id} doc={doc} navigation={navigation} \r\n                        img={{uri: doc.image}} title={doc.name}\r\n                            address={doc.address} rating={doc.ratings}/>\r\n                    ))\r\n                ):(\r\n                    <ActivityIndicator size=\"large\" color=\"#FA454B\" />\r\n                )\r\n            }\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default SearchHotel;\r\n\r\nexport const Header = (props) => {\r\n    const navigation = props.navigation\r\n    const [SearchParam, setSearchParams] = useState('Hotels')\r\n    return (\r\n        <View style={{\r\n            backgroundColor: \"#FA454B\", width: '100%', minHeight: 100,\r\n            justifyContent: 'space-between', flexDirection: 'row', alignItems: 'center',\r\n            paddingLeft: 10, paddingRight: 10, paddingTop: Platform.OS == 'ios' ? 40 : 0\r\n        }}>\r\n            <View style={{\r\n                width: '90%', backgroundColor: 'white', height: 50,\r\n                borderRadius: 50,\r\n                flexDirection: 'row', justifyContent: 'center', alignItems: 'center'\r\n            }}>\r\n\r\n\r\n                <TextInput value={props.search} onChangeText={props.onChange} style={{ flex: 5, paddingLeft: 20 }}\r\n                    placeholder=\"Search\" placeholderTextColor={'rgb(130,130,130)'} />\r\n                <TouchableOpacity\r\n                    onPress={() => {\r\n                        navigation.navigate('SearchDeal')\r\n                    }}\r\n                    style={{\r\n                        flex: 2, backgroundColor: 'rgb(220,220,220)', height: '100%',\r\n                        borderTopRightRadius: 30, borderBottomRightRadius: 30, justifyContent: 'center', alignItems: 'center'\r\n                    }}>\r\n                    <Text style={{ color: 'rgb(130,130,130)', }}>Hotels</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <TouchableOpacity onPress={() => {\r\n                navigation.navigate('Home')\r\n            }} style={{ width: '10%', alignItems: 'flex-end' }}>\r\n                <MaterialIcons name=\"close\" size={24} color=\"white\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}