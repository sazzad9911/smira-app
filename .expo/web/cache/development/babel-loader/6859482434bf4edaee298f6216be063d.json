{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NotificationBar = function NotificationBar(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var _Dimensions$get = Dimensions.get('screen'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  return _jsxs(View, {\n    style: {\n      height: height / 2.3,\n      padding: 20,\n      backgroundColor: 'white',\n      marginTop: 120,\n      marginLeft: 15,\n      marginRight: 15,\n      borderRadius: 20,\n      shadowColor: 'gray',\n      shadowOffset: {\n        height: 3,\n        width: 0\n      },\n      shadowOpacity: '0.5',\n      shadowRadius: 50,\n      elevation: 40\n    },\n    children: [_jsx(View, {\n      style: {\n        alignItems: 'flex-end'\n      },\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          props.close(false);\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"close\",\n          size: 24\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        alignItems: 'center'\n      },\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '100%',\n          paddingLeft: 10,\n          paddingRight: 10,\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            margin: 10,\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          children: \"Notifications\"\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            style: {\n              margin: 10,\n              fontSize: 12,\n              color: 'red'\n            },\n            children: \"Mark as all read\"\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          borderWidth: 0.5,\n          borderColor: 'rgb(220,220,220)',\n          width: '90%'\n        }\n      })]\n    }), Notifications.length > 0 && _jsx(ScrollView, {\n      children: Notifications.map(function (notification) {\n        return _jsxs(View, {\n          style: {\n            padding: 10,\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: 'bold',\n              margin: 2,\n              width: '100%'\n            },\n            children: notification.title()\n          }), _jsx(Text, {\n            style: {\n              color: 'gray',\n              margin: 2,\n              width: '100%'\n            },\n            children: notification.visibleText\n          }), _jsx(View, {\n            style: {\n              borderWidth: 0.5,\n              width: '100%',\n              borderColor: 'rgb(220,220,220)',\n              marginTop: 10\n            }\n          })]\n        });\n      })\n    }), Notifications.length <= 0 && _jsxs(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '70%'\n      },\n      children: [_jsx(FontAwesome5, {\n        name: \"smile\",\n        size: 35,\n        color: \"rgb(200,200,200)\"\n      }), _jsx(Text, {\n        style: {\n          color: 'rgb(200,200,200)',\n          marginTop: 10\n        },\n        children: \"No Notifications\"\n      })]\n    })]\n  });\n};\n\nexport default NotificationBar;","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/components/NotificationBar.js"],"names":["React","useState","MaterialIcons","FontAwesome5","NotificationBar","props","Notifications","setNotifications","Dimensions","get","height","width","padding","backgroundColor","marginTop","marginLeft","marginRight","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","alignItems","close","flexDirection","justifyContent","paddingLeft","paddingRight","margin","fontSize","fontWeight","color","borderWidth","borderColor","length","map","notification","title","visibleText"],"mappings":"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","sourcesContent":["import React,{ useState} from 'react';\r\nimport { View, TouchableOpacity,Dimensions, Text } from 'react-native';\r\nimport { MaterialIcons, FontAwesome5 } from '@expo/vector-icons'\r\n\r\nconst NotificationBar = (props) => {\r\n    const [Notifications, setNotifications] = useState([\r\n\r\n    ])\r\n    const { height, width } = Dimensions.get('screen');\r\n    return (\r\n        <View style={{\r\n            height: height / 2.3, padding: 20, backgroundColor: 'white', marginTop: 120,\r\n            marginLeft: 15, marginRight: 15, borderRadius: 20, shadowColor: 'gray', shadowOffset: {\r\n                height: 3, width: 0\r\n            }, shadowOpacity: '0.5', shadowRadius: 50, elevation: 40,\r\n        }}>\r\n            <View style={{ alignItems: 'flex-end' }}>\r\n                <TouchableOpacity onPress={() => {\r\n                    props.close(false)\r\n                }}>\r\n                    <MaterialIcons name='close' size={24} />\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={{ alignItems: 'center', }}>\r\n                <View style={{\r\n                    flexDirection: 'row', justifyContent: 'space-between', width: '100%',\r\n                    paddingLeft: 10, paddingRight: 10, alignItems: 'center'\r\n                }}>\r\n                    <Text style={{ margin: 10, fontSize: 18, fontWeight: 'bold' }}>Notifications</Text>\r\n                    <TouchableOpacity><Text style={{ margin: 10, fontSize: 12, color: 'red' }}>Mark as all read</Text></TouchableOpacity>\r\n                </View>\r\n                <View style={{ borderWidth: 0.5, borderColor: 'rgb(220,220,220)', width: '90%' }}></View>\r\n            </View>\r\n            {\r\n                Notifications.length > 0 &&\r\n                <ScrollView>\r\n                    {\r\n                        Notifications.map(notification => {\r\n                            return (\r\n                                <View style={{ padding: 10, alignItems: 'center' }}>\r\n                                    <Text style={{ fontWeight: 'bold', margin: 2, width: '100%' }}>{notification.title()}</Text>\r\n                                    <Text style={{ color: 'gray', margin: 2, width: '100%' }}>{notification.visibleText}</Text>\r\n                                    <View style={{ borderWidth: 0.5, width: '100%', borderColor: 'rgb(220,220,220)', marginTop: 10 }}></View>\r\n                                </View>\r\n                            );\r\n                        })\r\n                    }\r\n                </ScrollView>\r\n            }\r\n            {\r\n                Notifications.length <= 0 &&\r\n                <View style={{ justifyContent: 'center', alignItems: 'center', height: '70%' }}>\r\n                    <FontAwesome5 name=\"smile\" size={35} color=\"rgb(200,200,200)\" />\r\n                    <Text style={{ color: 'rgb(200,200,200)', marginTop: 10 }}>No Notifications</Text>\r\n                </View>\r\n            }\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default NotificationBar;"]},"metadata":{},"sourceType":"module"}