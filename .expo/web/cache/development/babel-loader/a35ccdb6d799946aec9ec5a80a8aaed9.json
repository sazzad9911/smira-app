{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    screenWidth = _Dimensions$get.width;\n\nvar AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\n\nvar SideSwipe = function (_Component) {\n  _inherits(SideSwipe, _Component);\n\n  var _super = _createSuper(SideSwipe);\n\n  function SideSwipe(props) {\n    var _this;\n\n    _classCallCheck(this, SideSwipe);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidUpdate = function (prevProps) {\n      var _this$props = _this.props,\n          contentOffset = _this$props.contentOffset,\n          index = _this$props.index,\n          itemWidth = _this$props.itemWidth;\n\n      if (prevProps.itemWidth !== itemWidth) {\n        _this.state.itemWidthAnim.setValue(itemWidth);\n      }\n\n      if (Number.isInteger(index) && index !== prevProps.index) {\n        _this.setState(function () {\n          return {\n            currentIndex: index\n          };\n        }, function () {\n          setTimeout(function () {\n            return _this.list.scrollToIndex({\n              animated: true,\n              index: _this.state.currentIndex,\n              viewOffset: contentOffset\n            });\n          });\n        });\n      }\n    };\n\n    _this.render = function () {\n      var _this$props2 = _this.props,\n          contentContainerStyle = _this$props2.contentContainerStyle,\n          contentOffset = _this$props2.contentOffset,\n          data = _this$props2.data,\n          extractKey = _this$props2.extractKey,\n          flatListStyle = _this$props2.flatListStyle,\n          _renderItem = _this$props2.renderItem,\n          style = _this$props2.style;\n      var _this$state = _this.state,\n          animatedValue = _this$state.animatedValue,\n          currentIndex = _this$state.currentIndex,\n          scrollPosAnim = _this$state.scrollPosAnim;\n      var dataLength = data.length;\n      return _jsx(View, _objectSpread(_objectSpread({\n        style: [{\n          width: screenWidth\n        }, style]\n      }, _this.panResponder.panHandlers), {}, {\n        children: _jsx(AnimatedFlatList, {\n          horizontal: true,\n          contentContainerStyle: [{\n            paddingHorizontal: contentOffset\n          }, contentContainerStyle],\n          data: data,\n          getItemLayout: _this.getItemLayout,\n          keyExtractor: extractKey,\n          initialScrollIndex: currentIndex,\n          ref: _this.getRef,\n          scrollEnabled: false,\n          showsHorizontalScrollIndicator: false,\n          style: [styles.flatList, flatListStyle],\n          onEndReached: _this.props.onEndReached,\n          onEndReachedThreshold: _this.props.onEndReachedThreshold,\n          scrollEventThrottle: 1,\n          onScroll: Animated.event([{\n            nativeEvent: {\n              contentOffset: {\n                x: scrollPosAnim\n              }\n            }\n          }], {\n            useNativeDriver: _this.props.useNativeDriver\n          }),\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n                index = _ref.index;\n            return _renderItem({\n              item: item,\n              currentIndex: currentIndex,\n              itemIndex: index,\n              itemCount: dataLength,\n              animatedValue: animatedValue\n            });\n          }\n        })\n      }));\n    };\n\n    _this.getRef = function (ref) {\n      if (ref) {\n        _this.list = ref._component ? ref._component : ref;\n      }\n    };\n\n    _this.getItemLayout = function (data, index) {\n      return {\n        offset: _this.props.itemWidth * index + _this.props.contentOffset,\n        length: _this.props.itemWidth,\n        index: index\n      };\n    };\n\n    _this.handleGestureTerminationRequest = function (e, s) {\n      return _this.props.shouldRelease(s);\n    };\n\n    _this.handleGestureCapture = function (e, s) {\n      return _this.props.shouldCapture(s);\n    };\n\n    _this.handleGestureStart = function (e, s) {\n      return _this.props.onGestureStart(s);\n    };\n\n    _this.handleGestureMove = function (e, _ref2) {\n      var dx = _ref2.dx;\n      var currentOffset = _this.state.currentIndex * _this.props.itemWidth;\n      var resolvedOffset = currentOffset - dx;\n\n      _this.list.scrollToOffset({\n        offset: resolvedOffset,\n        animated: false\n      });\n    };\n\n    _this.handleGestureRelease = function (e, _ref3) {\n      var dx = _ref3.dx,\n          vx = _ref3.vx;\n      var currentOffset = _this.state.currentIndex * _this.props.itemWidth;\n      var resolvedOffset = currentOffset - dx;\n      var resolvedIndex = Math.round((resolvedOffset + (dx > 0 ? -_this.props.threshold : _this.props.threshold)) / _this.props.itemWidth);\n      var newIndex;\n\n      if (_this.props.useVelocityForIndex) {\n        var absoluteVelocity = Math.round(Math.abs(vx));\n        var velocityDifference = absoluteVelocity < 1 ? 0 : absoluteVelocity - 1;\n        newIndex = dx > 0 ? Math.max(resolvedIndex - velocityDifference, 0) : Math.min(resolvedIndex + velocityDifference, _this.props.data.length - 1);\n      } else {\n        newIndex = dx > 0 ? Math.max(resolvedIndex, 0) : Math.min(resolvedIndex, _this.props.data.length - 1);\n      }\n\n      _this.list.scrollToIndex({\n        index: newIndex,\n        animated: true,\n        viewOffset: _this.props.contentOffset\n      });\n\n      _this.setState(function () {\n        return {\n          currentIndex: newIndex\n        };\n      }, function () {\n        _this.props.onIndexChange(newIndex);\n\n        _this.props.onGestureRelease();\n      });\n    };\n\n    var _currentIndex = props.index || 0;\n\n    var initialOffset = _currentIndex * props.itemWidth;\n\n    var _scrollPosAnim = new Animated.Value(initialOffset);\n\n    var itemWidthAnim = new Animated.Value(props.itemWidth);\n\n    var _animatedValue = Animated.divide(_scrollPosAnim, itemWidthAnim);\n\n    _this.state = {\n      animatedValue: _animatedValue,\n      currentIndex: _currentIndex,\n      itemWidthAnim: itemWidthAnim,\n      scrollPosAnim: _scrollPosAnim\n    };\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onMoveShouldSetPanResponder: _this.handleGestureCapture,\n      onPanResponderGrant: _this.handleGestureStart,\n      onPanResponderMove: _this.handleGestureMove,\n      onPanResponderRelease: _this.handleGestureRelease,\n      onPanResponderTerminationRequest: _this.handleGestureTerminationRequest\n    });\n    return _this;\n  }\n\n  return _createClass(SideSwipe);\n}(Component);\n\nSideSwipe.defaultProps = {\n  contentOffset: 0,\n  data: [],\n  extractKey: function extractKey(item, index) {\n    return \"sideswipe-carousel-item-\" + index;\n  },\n  itemWidth: screenWidth,\n  onEndReached: function onEndReached() {},\n  onEndReachedThreshold: 0.9,\n  onGestureStart: function onGestureStart() {},\n  onGestureRelease: function onGestureRelease() {},\n  onIndexChange: function onIndexChange() {},\n  renderItem: function renderItem() {\n    return null;\n  },\n  shouldCapture: function shouldCapture(_ref4) {\n    var dx = _ref4.dx;\n    return dx * dx > 1;\n  },\n  shouldRelease: function shouldRelease() {\n    return false;\n  },\n  threshold: 0,\n  useVelocityForIndex: true,\n  useNativeDriver: true\n};\nexport { SideSwipe as default };\nvar styles = StyleSheet.create({\n  flatList: {\n    flexGrow: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/node_modules/react-native-sideswipe/src/carousel.js"],"names":["React","Component","Dimensions","get","screenWidth","width","AnimatedFlatList","Animated","createAnimatedComponent","FlatList","SideSwipe","props","componentDidUpdate","prevProps","contentOffset","index","itemWidth","state","itemWidthAnim","setValue","Number","isInteger","setState","currentIndex","setTimeout","list","scrollToIndex","animated","viewOffset","render","contentContainerStyle","data","extractKey","flatListStyle","renderItem","style","animatedValue","scrollPosAnim","dataLength","length","panResponder","panHandlers","paddingHorizontal","getItemLayout","getRef","styles","flatList","onEndReached","onEndReachedThreshold","event","nativeEvent","x","useNativeDriver","item","itemIndex","itemCount","ref","_component","offset","handleGestureTerminationRequest","e","s","shouldRelease","handleGestureCapture","shouldCapture","handleGestureStart","onGestureStart","handleGestureMove","dx","currentOffset","resolvedOffset","scrollToOffset","handleGestureRelease","vx","resolvedIndex","Math","round","threshold","newIndex","useVelocityForIndex","absoluteVelocity","abs","velocityDifference","max","min","onIndexChange","onGestureRelease","initialOffset","Value","divide","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminationRequest","defaultProps","StyleSheet","flexGrow"],"mappings":"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","sourcesContent":["/* @flow */\nimport React, { Component } from 'react';\nimport {\n  View,\n  Animated,\n  Dimensions,\n  FlatList,\n  PanResponder,\n  StyleSheet,\n} from 'react-native';\n\nimport type {\n  CarouselProps,\n  GestureEvent,\n  GestureState,\n  ScrollEvent,\n} from '../types';\n\nconst { width: screenWidth } = Dimensions.get('window');\nconst AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\n\ntype State = {\n  animatedValue: Animated.Value,\n  currentIndex: number,\n  itemWidthAnim: Animated.Value,\n  scrollPosAnim: Animated.Value,\n};\n\nexport default class SideSwipe extends Component<CarouselProps, State> {\n  panResponder: PanResponder;\n  list: typeof FlatList;\n\n  static defaultProps = {\n    contentOffset: 0,\n    data: [],\n    extractKey: (item: *, index: number) => `sideswipe-carousel-item-${index}`,\n    itemWidth: screenWidth,\n    onEndReached: () => {},\n    onEndReachedThreshold: 0.9,\n    onGestureStart: () => {},\n    onGestureRelease: () => {},\n    onIndexChange: () => {},\n    renderItem: () => null,\n    shouldCapture: ({ dx }: GestureState) => (dx * dx) > 1,\n    shouldRelease: () => false,\n    threshold: 0,\n    useVelocityForIndex: true,\n    useNativeDriver: true,\n  };\n\n  constructor(props: CarouselProps) {\n    super(props);\n\n    const currentIndex: number = props.index || 0;\n    const initialOffset: number = currentIndex * props.itemWidth;\n    const scrollPosAnim: Animated.Value = new Animated.Value(initialOffset);\n    const itemWidthAnim: Animated.Value = new Animated.Value(props.itemWidth);\n    const animatedValue: Animated.Value = Animated.divide(\n      scrollPosAnim,\n      itemWidthAnim\n    );\n\n    this.state = {\n      animatedValue,\n      currentIndex,\n      itemWidthAnim,\n      scrollPosAnim,\n    };\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: this.handleGestureCapture,\n      onPanResponderGrant: this.handleGestureStart,\n      onPanResponderMove: this.handleGestureMove,\n      onPanResponderRelease: this.handleGestureRelease,\n      onPanResponderTerminationRequest: this.handleGestureTerminationRequest,\n    });\n  }\n\n  componentDidUpdate = (prevProps: CarouselProps) => {\n    const { contentOffset, index, itemWidth } = this.props;\n\n    if (prevProps.itemWidth !== itemWidth) {\n      this.state.itemWidthAnim.setValue(itemWidth);\n    }\n\n    if (Number.isInteger(index) && index !== prevProps.index) {\n      this.setState(\n        () => ({ currentIndex: index }),\n        () => {\n          setTimeout(() =>\n            this.list.scrollToIndex({\n              animated: true,\n              index: this.state.currentIndex,\n              viewOffset: contentOffset,\n            })\n          );\n        }\n      );\n    }\n  };\n\n  render = () => {\n    const {\n      contentContainerStyle,\n      contentOffset,\n      data,\n      extractKey,\n      flatListStyle,\n      renderItem,\n      style,\n    } = this.props;\n    const { animatedValue, currentIndex, scrollPosAnim } = this.state;\n    const dataLength = data.length;\n\n    return (\n      <View\n        style={[{ width: screenWidth }, style]}\n        {...this.panResponder.panHandlers}\n      >\n        <AnimatedFlatList\n          horizontal\n          contentContainerStyle={[\n            { paddingHorizontal: contentOffset },\n            contentContainerStyle,\n          ]}\n          data={data}\n          getItemLayout={this.getItemLayout}\n          keyExtractor={extractKey}\n          initialScrollIndex={currentIndex}\n          ref={this.getRef}\n          scrollEnabled={false}\n          showsHorizontalScrollIndicator={false}\n          style={[styles.flatList, flatListStyle]}\n          onEndReached={this.props.onEndReached}\n          onEndReachedThreshold={this.props.onEndReachedThreshold}\n          scrollEventThrottle={1}\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: scrollPosAnim } } }],\n            { useNativeDriver: this.props.useNativeDriver }\n          )}\n          renderItem={({ item, index }) =>\n            renderItem({\n              item,\n              currentIndex,\n              itemIndex: index,\n              itemCount: dataLength,\n              animatedValue: animatedValue,\n            })\n          }\n        />\n      </View>\n    );\n  };\n\n  getRef = (ref: *) => {\n    if (ref) {\n      this.list = ref._component ? ref._component : ref;\n    }\n  };\n\n  getItemLayout = (data: Array<*>, index: number) => ({\n    offset: this.props.itemWidth * index + this.props.contentOffset,\n    length: this.props.itemWidth,\n    index,\n  });\n\n  handleGestureTerminationRequest = (e: GestureEvent, s: GestureState) =>\n    this.props.shouldRelease(s);\n\n  handleGestureCapture = (e: GestureEvent, s: GestureState) =>\n    this.props.shouldCapture(s);\n\n  handleGestureStart = (e: GestureEvent, s: GestureState) =>\n    this.props.onGestureStart(s);\n\n  handleGestureMove = (e: GestureEvent, { dx }: GestureState) => {\n    const currentOffset: number =\n      this.state.currentIndex * this.props.itemWidth;\n    const resolvedOffset: number = currentOffset - dx;\n\n    this.list.scrollToOffset({\n      offset: resolvedOffset,\n      animated: false,\n    });\n  };\n\n  handleGestureRelease = (e: GestureEvent, { dx, vx }: GestureState) => {\n    const currentOffset: number =\n      this.state.currentIndex * this.props.itemWidth;\n    const resolvedOffset: number = currentOffset - dx;\n    const resolvedIndex: number = Math.round(\n      (resolvedOffset +\n        (dx > 0 ? -this.props.threshold : this.props.threshold)) /\n        this.props.itemWidth\n    );\n\n    let newIndex: number;\n    if (this.props.useVelocityForIndex) {\n      const absoluteVelocity: number = Math.round(Math.abs(vx));\n      const velocityDifference: number =\n        absoluteVelocity < 1 ? 0 : absoluteVelocity - 1;\n\n      newIndex =\n        dx > 0\n          ? Math.max(resolvedIndex - velocityDifference, 0)\n          : Math.min(\n              resolvedIndex + velocityDifference,\n              this.props.data.length - 1\n            );\n    } else {\n      newIndex =\n        dx > 0\n          ? Math.max(resolvedIndex, 0)\n          : Math.min(resolvedIndex, this.props.data.length - 1);\n    }\n\n    this.list.scrollToIndex({\n      index: newIndex,\n      animated: true,\n      viewOffset: this.props.contentOffset,\n    });\n\n    this.setState(\n      () => ({ currentIndex: newIndex }),\n      () => {\n        this.props.onIndexChange(newIndex);\n        this.props.onGestureRelease();\n      },\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  flatList: {\n    flexGrow: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}