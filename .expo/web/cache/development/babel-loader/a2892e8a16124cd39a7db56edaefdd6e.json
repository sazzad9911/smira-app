{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Fontisto } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport AnimatedLoader from \"react-native-animated-loader\";\nimport { postData, url } from \"../action\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\nvar window = Dimensions.get('window');\n\nvar CreateUser = function CreateUser(props) {\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      Name = _React$useState6[0],\n      setName = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      visibility = _React$useState8[0],\n      setVisibility = _React$useState8[1];\n\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: {\n        marginTop: 40\n      },\n      children: [_jsx(View, {\n        style: {\n          marginTop: '15%',\n          marginLeft: '85%'\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            props.close(false);\n          },\n          children: _jsx(Fontisto, {\n            name: \"close-a\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: '20%'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 35\n          },\n          children: \"Hello, New Member!\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            marginTop: 20,\n            color: '#A7A7A7'\n          },\n          children: \"Register your new account\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(View, {\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(TextInput, {\n            onChangeText: setName,\n            placeholder: \"Name\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 30,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          }), _jsx(TextInput, {\n            onChangeText: setEmail,\n            placeholder: \"Email\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 10,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          }), _jsx(TextInput, {\n            onChangeText: setPassword,\n            placeholder: \"Password\",\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 15,\n              borderRadius: 50,\n              marginTop: 10,\n              backgroundColor: '#F5F5F5',\n              fontSize: 18,\n              width: window.width - 50\n            }\n          })]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            if (!Email || !Password || !Name) {\n              Alert.alert(\"Opps!\", \"Please fill all the fields\");\n              return;\n            }\n\n            setVisibility(true);\n            createUserWithEmailAndPassword(auth, Email, Password).then(function (userCredentials) {\n              postData(url + '/setData', {\n                auth: userCredentials.user,\n                tableName: 'user',\n                columns: ['name', 'email', 'uid'],\n                values: [Name, Email, userCredentials.user.uid]\n              }).then(function (data) {\n                Alert.alert('Success!', 'Successfully sign up completed');\n                setVisibility(false);\n                navigation.navigate('Dashboard');\n              });\n            }).catch(function (err) {\n              Alert.alert('Error', err.code);\n              setVisibility(false);\n            });\n          },\n          children: _jsx(View, {\n            style: {\n              height: 60,\n              marginHorizontal: 25,\n              padding: 10,\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'row',\n              backgroundColor: '#FC444B',\n              shadowOffset: {\n                height: 2,\n                width: 2\n              },\n              shadowColor: 'black',\n              shadowOpacity: .3,\n              shadowRadius: 10,\n              elevation: 4,\n              width: window.width - 50,\n              marginVertical: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white',\n                fontSize: 18\n              },\n              children: \"SIGNUP\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: window.width - 40,\n            height: 2,\n            backgroundColor: '#0000008e',\n            marginLeft: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          children: _jsxs(View, {\n            style: {\n              height: 60,\n              margin: 20,\n              padding: 10,\n              borderRadius: 40,\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'row',\n              shadowOffset: {\n                height: 2,\n                width: 2\n              },\n              shadowColor: 'black',\n              shadowOpacity: .3,\n              shadowRadius: 10,\n              elevation: 4,\n              backgroundColor: '#FFFFF3'\n            },\n            children: [_jsx(AntDesign, {\n              name: \"google\",\n              size: 30,\n              color: \"black\"\n            }), _jsx(Text, {\n              style: {\n                color: '#000000',\n                fontSize: 18,\n                marginLeft: 30\n              },\n              children: \"Continue with Google\"\n            })]\n          })\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '10%'\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 20\n            },\n            children: \"Already a Member?\"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('SignIn');\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                color: 'red'\n              },\n              children: \"Login\"\n            })\n          })]\n        })]\n      })]\n    }), _jsx(AnimatedLoader, {\n      visible: visibility,\n      overlayColor: \"rgba(255,255,255,0.75)\",\n      source: require(\"../assets/9997-infinity-loader.json\"),\n      animationStyle: {\n        height: 100,\n        width: 100\n      },\n      speed: 1,\n      children: _jsx(Text, {\n        children: \"Loading...\"\n      })\n    })]\n  });\n};\n\nexport default CreateUser;","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/screens/CreateUser.js"],"names":["React","Fontisto","AntDesign","getAuth","createUserWithEmailAndPassword","AnimatedLoader","postData","url","auth","window","Dimensions","get","CreateUser","props","navigation","useState","Email","setEmail","Password","setPassword","Name","setName","visibility","setVisibility","marginTop","marginLeft","close","justifyContent","alignItems","fontSize","color","height","marginHorizontal","padding","borderRadius","backgroundColor","width","Alert","alert","then","userCredentials","user","tableName","columns","values","uid","data","navigate","catch","err","code","flexDirection","shadowOffset","shadowColor","shadowOpacity","shadowRadius","elevation","marginVertical","margin","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    View, Modal, Text, ScrollView, Image,\r\n    TouchableOpacity, TextInput, Dimensions, Platform, StyleSheet, Alert\r\n} from 'react-native';\r\nimport { Fontisto } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport {getAuth,createUserWithEmailAndPassword} from 'firebase/auth';\r\nimport AnimatedLoader from \"react-native-animated-loader\";\r\nimport { postData, url } from '../action'\r\n//import * as Google from 'expo-google-app-auth';\r\nconst auth = getAuth();\r\nconst window = Dimensions.get('window')\r\n\r\nconst CreateUser = (props) => {\r\n    const navigation = props.navigation\r\n    const [Email, setEmail] = React.useState()\r\n    const [Password, setPassword] = React.useState()\r\n    const [Name, setName] = React.useState()\r\n    const [visibility, setVisibility] = React.useState(false);\r\n    return (\r\n        <ScrollView>\r\n            <View style={{\r\n                marginTop: 40,\r\n            }}>\r\n                <View style={{\r\n                    marginTop: '15%',\r\n                    marginLeft: '85%'\r\n                }}>\r\n                    <TouchableOpacity onPress={() => {\r\n                        props.close(false)\r\n                    }}>\r\n                        <Fontisto name=\"close-a\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: '20%',\r\n                }}>\r\n                    <Text style={{\r\n                        fontSize: 35,\r\n                    }}>Hello, New Member!</Text>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        marginTop: 20,\r\n                        color: '#A7A7A7'\r\n                    }}>Register your new account</Text>\r\n                </View>\r\n\r\n                <View >\r\n                    <View style={{\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n\r\n                        <TextInput onChangeText={setName} placeholder='Name'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 30,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <TextInput onChangeText={setEmail} placeholder='Email'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 10,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n\r\n                        <TextInput onChangeText={setPassword} placeholder='Password'\r\n                            style={{\r\n                                height: 60,\r\n                                marginHorizontal: 25,\r\n                                padding: 15,\r\n                                borderRadius: 50,\r\n                                marginTop: 10,\r\n                                backgroundColor: '#F5F5F5',\r\n                                fontSize: 18,\r\n                                width: window.width - 50\r\n\r\n                            }}\r\n                        />\r\n\r\n                    </View>\r\n\r\n\r\n                    <TouchableOpacity onPress={() => {\r\n                        if (!Email || !Password || !Name) {\r\n                            Alert.alert(\"Opps!\", \"Please fill all the fields\")\r\n                            return\r\n                        }\r\n                        setVisibility(true)\r\n                        \r\n                        createUserWithEmailAndPassword(auth,Email, Password)\r\n                            .then(userCredentials => {\r\n                                postData(url +'/setData', {\r\n                                    auth:userCredentials.user,\r\n                                    tableName: 'user',\r\n                                    columns: ['name', 'email','uid'],\r\n                                    values:[Name,Email,userCredentials.user.uid]\r\n                                }).then(data => {\r\n                                    Alert.alert('Success!', 'Successfully sign up completed')\r\n                                    setVisibility(false)\r\n                                    navigation.navigate('Dashboard')\r\n                                })\r\n                            }).catch(err => {\r\n                                Alert.alert('Error', err.code)\r\n                                setVisibility(false)\r\n                                //console.log(err.message)\r\n                            })\r\n                    }}>\r\n                        <View style={{\r\n                            height: 60,\r\n                            marginHorizontal: 25,\r\n                            padding: 10,\r\n                            borderRadius: 40,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'row',\r\n                            backgroundColor: '#FC444B',\r\n                            shadowOffset: {\r\n                                height: 2, width: 2,\r\n                            },\r\n                            shadowColor: 'black',\r\n                            shadowOpacity: .3,\r\n                            shadowRadius: 10,\r\n                            elevation: 4,\r\n                            width: window.width - 50,\r\n                            marginVertical: 10\r\n                        }}>\r\n                            <Text style={{\r\n                                color: 'white',\r\n                                fontSize: 18,\r\n                            }}>SIGNUP</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{\r\n                        width: window.width - 40, height: 2,\r\n                        backgroundColor: '#0000008e', marginLeft: 20\r\n                    }}></View>\r\n                    <TouchableOpacity >\r\n                        <View style={{\r\n                            height: 60,\r\n                            margin: 20,\r\n                            padding: 10,\r\n                            borderRadius: 40,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'row',\r\n                            shadowOffset: {\r\n                                height: 2, width: 2,\r\n                            },\r\n                            shadowColor: 'black',\r\n                            shadowOpacity: .3,\r\n                            shadowRadius: 10,\r\n                            elevation: 4,\r\n                            backgroundColor: '#FFFFF3',\r\n                        }}>\r\n                            <AntDesign name=\"google\" size={30} color=\"black\" />\r\n                            <Text style={{\r\n                                color: '#000000',\r\n                                fontSize: 18,\r\n                                marginLeft: 30\r\n                            }}>Continue with Google</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    <View style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: '10%'\r\n                    }}>\r\n                        <Text style={{\r\n                            fontSize: 20\r\n                        }}>Already a Member?</Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('SignIn')}>\r\n                            <Text style={{\r\n                                fontSize: 20,\r\n                                color: 'red',\r\n                            }}>Login</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n            <AnimatedLoader\r\n                visible={visibility}\r\n                overlayColor=\"rgba(255,255,255,0.75)\"\r\n                source={require(\"../assets/9997-infinity-loader.json\")}\r\n                animationStyle={{\r\n                    height: 100,\r\n                    width: 100\r\n                }}\r\n                speed={1}\r\n            >\r\n                <Text>Loading...</Text>\r\n            </AnimatedLoader>\r\n        </ScrollView>\r\n    )\r\n}\r\nexport default CreateUser"]},"metadata":{},"sourceType":"module"}