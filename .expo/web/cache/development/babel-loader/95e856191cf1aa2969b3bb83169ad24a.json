{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { Ionicons, Entypo } from '@expo/vector-icons';\nimport Cards from \"../components/Cards\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport picture from \"../assets/tub.png\";\nimport DealCart from \"../components/DealCart\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { postData, url } from \"../action\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CategorySingle = function CategorySingle(props) {\n  var title = props.route.params.title;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      DealData = _React$useState2[0],\n      setDealData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Hotels = _React$useState4[0],\n      setHotels = _React$useState4[1];\n\n  var navigation = props.navigation;\n  React.useEffect(function () {\n    postData(url + \"/getData\", {\n      tableName: 'deals',\n      orderColumn: 'popularity'\n    }).then(function (data) {\n      if (Array.isArray(data)) {\n        return setDealData(data);\n      }\n\n      console.log('CategorySingle.js->' + data.message);\n    });\n  }, []);\n  React.useEffect(function () {\n    postData(url + \"/getData\", {\n      tableName: 'hotels',\n      orderColumn: 'popularity'\n    }).then(function (data) {\n      if (Array.isArray(data)) {\n        return setHotels(data);\n      }\n\n      console.log('CategorySingle.js->' + data.message);\n    });\n  }, []);\n\n  if (title == 'Popular Hotel') {\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: Platform.OS == 'ios' ? 50 : 5,\n          alignItems: 'center'\n        },\n        children: [_jsx(View, {\n          style: {\n            width: Dimensions.get('screen').width - 60\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: 'black',\n              fontSize: 24,\n              fontWeight: '800'\n            },\n            children: [\" \", title]\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: props.navigation.goBack,\n          children: _jsx(Entypo, {\n            name: \"cross\",\n            size: 40,\n            color: \"black\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Ionicons, {\n          name: \"md-checkmark-done-circle-outline\",\n          size: 20,\n          color: \"rgba(100, 182, 87, 1)\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 14,\n            color: '#000000',\n            fontWeight: '500'\n          },\n          children: \"Free for Members\"\n        })]\n      }), _jsx(ScrollView, {\n        children: _jsx(View, {\n          children: Hotels ? Hotels.map(function (doc) {\n            return _jsx(Cards, {\n              doc: doc,\n              navigation: navigation,\n              img: {\n                uri: doc.image\n              },\n              title: doc.name,\n              address: doc.address,\n              rating: doc.ratings\n            }, doc.id);\n          }) : _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FA454B\"\n          })\n        })\n      })]\n    });\n  } else if (title == 'Restaurant' || title == 'Deals Near You') {\n    return _jsxs(View, {\n      style: styles.body,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: Platform.OS == 'ios' ? 50 : 5,\n          alignItems: 'center'\n        },\n        children: [_jsx(View, {\n          style: {\n            width: Dimensions.get('screen').width - 60\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: 'black',\n              fontSize: 24,\n              fontWeight: '800'\n            },\n            children: [\" \", title]\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: props.navigation.goBack,\n          children: _jsx(Entypo, {\n            name: \"cross\",\n            size: 40,\n            color: \"black\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(Ionicons, {\n          name: \"md-checkmark-done-circle-outline\",\n          size: 20,\n          color: \"rgba(100, 182, 87, 1)\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 14,\n            color: '#000000',\n            fontWeight: '500'\n          },\n          children: \"Free for Members\"\n        })]\n      }), _jsx(ScrollView, {\n        children: _jsx(View, {\n          children: DealData ? DealData.map(function (doc) {\n            return _jsx(DealCart, {\n              data: doc,\n              headLine: doc.name,\n              category: doc.brand,\n              img: doc.image\n            }, doc.id);\n          }) : _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#FA454B\"\n          })\n        })\n      })]\n    });\n  } else {\n    return _jsx(View, {});\n  }\n\n  ;\n};\n\nexport default CategorySingle;\nvar styles = StyleSheet.create({\n  body: {\n    height: Dimensions.get('screen').height,\n    width: Dimensions.get('screen').width\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 5,\n    marginTop: 10,\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/screens/CategorySingle.js"],"names":["React","Ionicons","Entypo","Cards","picture","DealCart","TouchableOpacity","useSelector","postData","url","CategorySingle","props","title","route","params","useState","DealData","setDealData","Hotels","setHotels","navigation","useEffect","tableName","orderColumn","then","data","Array","isArray","console","log","message","styles","body","flexDirection","marginTop","Platform","OS","alignItems","width","Dimensions","get","color","fontSize","fontWeight","goBack","content","map","doc","uri","image","name","address","ratings","id","brand","StyleSheet","create","height","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Ionicons, Entypo } from '@expo/vector-icons';\r\nimport Cards from '../components/Cards'\r\nimport { View, Text, StyleSheet, Dimensions, ScrollView, Platform, ActivityIndicator } from 'react-native'\r\nimport picture from '../assets/tub.png'\r\nimport DealCart from '../components/DealCart'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { useSelector } from 'react-redux';\r\nimport { postData, url } from '../action';\r\n\r\nconst CategorySingle = (props) => {\r\n    const title = props.route.params.title;\r\n    const [DealData, setDealData] = React.useState(null)\r\n    const [Hotels, setHotels] = React.useState(null)\r\n    const navigation = props.navigation\r\n    //console.log(title)\r\n    React.useEffect(() => {\r\n        postData(url + \"/getData\", {\r\n            tableName: 'deals',\r\n            orderColumn: 'popularity'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return setDealData(data)\r\n            }\r\n            console.log('CategorySingle.js->' + data.message)\r\n        })\r\n    }, [])\r\n    React.useEffect(() => {\r\n        postData(url + \"/getData\", {\r\n            tableName: 'hotels',\r\n            orderColumn: 'popularity'\r\n        }).then(data => {\r\n            if (Array.isArray(data)) {\r\n                return setHotels(data)\r\n            }\r\n            console.log('CategorySingle.js->' + data.message)\r\n        })\r\n    }, [])\r\n    if (title == 'Popular Hotel') {\r\n        return (\r\n            <View style={styles.body}>\r\n\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    marginTop: Platform.OS == 'ios' ? 50 : 5,\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <View style={{\r\n                        width: Dimensions.get('screen').width - 60\r\n                    }}>\r\n                        <Text style={{\r\n                            color: 'black',\r\n                            fontSize: 24,\r\n                            fontWeight: '800'\r\n                        }}> {title}</Text>\r\n                    </View>\r\n\r\n                    <TouchableOpacity onPress={props.navigation.goBack}>\r\n                        <Entypo name=\"cross\" size={40} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.content}>\r\n                    <Ionicons name=\"md-checkmark-done-circle-outline\" size={20} color='rgba(100, 182, 87, 1)' />\r\n                    <Text style={{\r\n                        fontSize: 14,\r\n                        color: '#000000',\r\n                        fontWeight: '500',\r\n                    }}>\r\n                        Free for Members\r\n                    </Text>\r\n                </View>\r\n                <ScrollView>\r\n                    <View >\r\n                        {\r\n                            Hotels ? (\r\n                                Hotels.map(doc => (\r\n                                    <Cards key={doc.id} doc={doc} navigation={navigation}\r\n                                        img={{ uri: doc.image }} title={doc.name}\r\n                                        address={doc.address} rating={doc.ratings} />\r\n                                ))\r\n                            ) : (\r\n                                <ActivityIndicator size=\"large\" color=\"#FA454B\" />\r\n                            )\r\n                        }\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n    else if (title == 'Restaurant' || title == 'Deals Near You') {\r\n        return (\r\n            <View style={styles.body}>\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    marginTop: Platform.OS == 'ios' ? 50 : 5,\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <View style={{\r\n                        width: Dimensions.get('screen').width - 60\r\n                    }}>\r\n                        <Text style={{\r\n                            color: 'black',\r\n                            fontSize: 24,\r\n                            fontWeight: '800'\r\n                        }}> {title}</Text>\r\n                    </View>\r\n\r\n                    <TouchableOpacity onPress={props.navigation.goBack}>\r\n                        <Entypo name=\"cross\" size={40} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.content}>\r\n                    <Ionicons name=\"md-checkmark-done-circle-outline\" size={20} color='rgba(100, 182, 87, 1)' />\r\n                    <Text style={{\r\n                        fontSize: 14,\r\n                        color: '#000000',\r\n                        fontWeight: '500',\r\n                    }}>\r\n                        Free for Members\r\n                    </Text>\r\n                </View>\r\n                <ScrollView>\r\n                    <View >\r\n                        {\r\n                            DealData ? (\r\n                                DealData.map(doc => (\r\n                                    <DealCart data={doc} key={doc.id} headLine={doc.name}\r\n                                        category={doc.brand} img={doc.image}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <ActivityIndicator size=\"large\" color=\"#FA454B\" />\r\n                            )\r\n                        }\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <View></View>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CategorySingle;\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n        height: Dimensions.get('screen').height,\r\n        width: Dimensions.get('screen').width,\r\n\r\n    },\r\n    content: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginLeft: 5,\r\n        marginTop: 10,\r\n        marginBottom: 30\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}