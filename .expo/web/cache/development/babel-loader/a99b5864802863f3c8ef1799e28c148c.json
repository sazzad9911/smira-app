{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Feather } from '@expo/vector-icons';\nimport { setShortBy } from \"../action\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ShortBy = function ShortBy() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Check = _React$useState2[0],\n      setCheck = _React$useState2[1];\n\n  var dispatch = useDispatch();\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: {\n        width: 350,\n        marginTop: 30,\n        marginLeft: 50,\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          flex: 5\n        },\n        children: \"Sort By\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          dispatch(setShortBy(null));\n        },\n        style: {\n          margin: 5\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 15,\n            flex: 1,\n            color: 'rgb(100,100,100)'\n          },\n          children: \"Clear All\"\n        })\n      })]\n    }), _jsx(List, {\n      value: Check,\n      onChange: function onChange(val) {\n        dispatch(setShortBy('popularity'));\n      },\n      title: \"Popularity\"\n    }), _jsx(List, {\n      value: Check,\n      onChange: function onChange(val) {\n        dispatch(setShortBy('discount'));\n      },\n      title: \"Discount\"\n    })]\n  });\n};\n\nexport default ShortBy;\n\nvar List = function List(props) {\n  var recentSearch = useSelector(function (state) {\n    return state.recentSearch;\n  });\n  return _jsxs(TouchableOpacity, {\n    onPress: function onPress() {\n      props.onChange(props.title);\n    },\n    style: {\n      flexDirection: 'row',\n      marginVertical: 15,\n      marginTop: 20\n    },\n    children: [_jsx(View, {\n      style: {\n        flex: 5\n      },\n      children: _jsx(Text, {\n        style: {\n          fontSize: 18,\n          color: props.title.toLowerCase() == recentSearch.shortBy ? 'red' : 'black',\n          marginLeft: 50\n        },\n        children: props.title\n      })\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: props.title.toLowerCase() == recentSearch.shortBy ? _jsx(View, {\n        style: {\n          height: 15,\n          width: 15,\n          borderRadius: 10,\n          backgroundColor: 'red'\n        }\n      }) : _jsx(View, {})\n    })]\n  });\n};","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/components/ShortBy.js"],"names":["React","Feather","setShortBy","useDispatch","useSelector","ShortBy","useState","Check","setCheck","dispatch","width","marginTop","marginLeft","flexDirection","fontSize","flex","margin","color","val","List","props","recentSearch","state","onChange","title","marginVertical","toLowerCase","shortBy","height","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView } from 'react-native'\r\nimport { Feather } from '@expo/vector-icons';\r\nimport {setShortBy} from '../action'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst ShortBy = () => {\r\n    const [Check, setCheck] = React.useState('')\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <ScrollView>\r\n            <View style={{\r\n                width: 350,\r\n                marginTop: 30,\r\n                marginLeft: 50,\r\n                flexDirection: 'row',\r\n            }}>\r\n                <Text style={{\r\n                    fontSize: 20,\r\n                    flex: 5,\r\n                }}>Sort By</Text>\r\n                <TouchableOpacity onPress={() => {\r\n                    dispatch(setShortBy(null))\r\n                }} style={{\r\n                    margin:5\r\n                }}>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        flex: 1,\r\n                        color: 'rgb(100,100,100)',\r\n                    }}>Clear All</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <List value={Check}\r\n                onChange={(val) => {\r\n                    //setCheck(val)\r\n                    dispatch(setShortBy('popularity'));\r\n                    }}\r\n                title='Popularity'\r\n            />\r\n            <List value={Check}\r\n                onChange={(val) => {\r\n                    //setCheck(val)\r\n                    dispatch(setShortBy('discount'))\r\n                }}\r\n                title='Discount'\r\n            />\r\n\r\n\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default ShortBy;\r\nconst List = (props) => {\r\n    const recentSearch=useSelector(state => state.recentSearch)\r\n    return (\r\n        <TouchableOpacity onPress={() => {\r\n            props.onChange(props.title)\r\n        }} style={{ flexDirection: 'row', marginVertical: 15, marginTop: 20 }}>\r\n            <View style={{ flex: 5 }}>\r\n                <Text style={{ fontSize: 18, color: props.title.toLowerCase() == recentSearch.shortBy ? 'red' : 'black', marginLeft: 50 }}>{props.title}</Text>\r\n            </View>\r\n            <View style={{ flex: 1 }}>\r\n                {\r\n                    props.title.toLowerCase() == recentSearch.shortBy ?\r\n                        (\r\n                            <View style={{\r\n                                height: 15,\r\n                                width: 15,\r\n                                borderRadius: 10,\r\n                                backgroundColor: 'red'\r\n                            }} />\r\n                        ) : (\r\n                            <View></View>\r\n                        )\r\n                }\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}