{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ResetPassword = function ResetPassword() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Confirm = _React$useState2[0],\n      setConfirm = _React$useState2[1];\n\n  return _jsx(ScrollView, {\n    children: Confirm ? _jsx(ConfirmMessage, {}) : _jsx(GetInstruction, {})\n  });\n};\n\nexport default ResetPassword;\n\nvar GetInstruction = function GetInstruction() {\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visible = _React$useState4[0],\n      setVisible = _React$useState4[1];\n\n  return _jsx(View, {\n    children: _jsxs(ScrollView, {\n      children: [_jsxs(Text, {\n        style: {\n          fontSize: 17,\n          marginLeft: '5%'\n        },\n        children: [\"Your new password must be different from\", \"\\n\", \" previous used passwords.\"]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: '10%',\n            marginLeft: '10%',\n            fontSize: 20,\n            color: 'rgb(100,100,100)'\n          },\n          children: \"Password\"\n        }), _jsxs(View, {\n          style: {\n            height: 50,\n            margin: 20,\n            borderWidth: 1,\n            padding: 10,\n            borderRadius: 30,\n            flexDirection: 'row'\n          },\n          children: [_jsx(TextInput, {\n            style: {\n              height: 50,\n              borderRadius: 30,\n              marginTop: -10,\n              width: '95%'\n            },\n            secureTextEntry: visible\n          }), _jsx(View, {\n            style: {\n              marginLeft: -10\n            },\n            children: visible ? _jsx(Ionicons, {\n              onPress: function onPress() {\n                return setVisible(false);\n              },\n              name: \"eye-off-outline\",\n              size: 24,\n              color: \"black\"\n            }) : _jsx(Ionicons, {\n              onPress: function onPress() {\n                return setVisible(true);\n              },\n              name: \"eye-outline\",\n              size: 24,\n              color: \"black\"\n            })\n          })]\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            color: 'rgb(100,100,100)',\n            marginLeft: '10%'\n          },\n          children: \"Must be atleast 8 characters.\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            marginTop: '10%',\n            marginLeft: '10%',\n            fontSize: 20,\n            color: 'rgb(100,100,100)'\n          },\n          children: \"Confirm Password\"\n        }), _jsx(View, {\n          children: _jsx(TextInput, {\n            style: {\n              height: 50,\n              margin: 20,\n              borderWidth: 1,\n              padding: 10,\n              borderRadius: 30\n            },\n            placeholder: \"\",\n            secureTextEntry: true\n          })\n        }), _jsx(Text, {\n          style: {\n            fontSize: 15,\n            color: 'rgb(100,100,100)',\n            marginLeft: '10%'\n          },\n          children: \"Both passwords must match.\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(View, {\n          style: {\n            height: 50,\n            margin: 12,\n            padding: 10,\n            borderWidth: 1,\n            borderColor: 'red',\n            borderRadius: 30,\n            marginTop: '30%',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'red',\n              fontSize: 20\n            },\n            children: \"RESET PASSWORD\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar ConfirmMessage = function ConfirmMessage() {\n  return _jsx(View, {\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: 100\n        },\n        children: [_jsx(AntDesign, {\n          name: \"checkcircle\",\n          size: 100,\n          color: \"red\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontWeight: \"bold\",\n            marginTop: 20\n          },\n          children: \"That's It!\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: 'rgb(100,100,100)'\n          },\n          children: \"Your password has been\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: 'rgb(100,100,100)'\n          },\n          children: \"Reset successfully.\"\n        })]\n      })\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/screens/ResetPassword.js"],"names":["React","AntDesign","Ionicons","ResetPassword","useState","Confirm","setConfirm","GetInstruction","visible","setVisible","fontSize","marginLeft","marginTop","color","height","margin","borderWidth","padding","borderRadius","flexDirection","width","borderColor","justifyContent","alignItems","ConfirmMessage","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, ScrollView, Text, TouchableOpacity, TextInput } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst ResetPassword = () => {\r\n    const [Confirm, setConfirm] = React.useState(false);\r\n    return (\r\n        <ScrollView>\r\n            {\r\n                Confirm ?\r\n                    (\r\n                        <ConfirmMessage />\r\n                    ) : (\r\n                        <GetInstruction />\r\n                    )\r\n            }\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\nconst GetInstruction = () => {\r\n    const [visible,setVisible]=React.useState(false)\r\n\r\n    return (\r\n        <View>\r\n            <ScrollView>\r\n                <Text style={{\r\n                    fontSize: 17,\r\n                    marginLeft: '5%'\r\n\r\n                }}>Your new password must be different from\r\n                    {\"\\n\"} previous used passwords.</Text>\r\n                <View >\r\n                    <Text style={{\r\n                        marginTop: '10%',\r\n                        marginLeft: '10%',\r\n                        fontSize: 20,\r\n                        color: 'rgb(100,100,100)',\r\n                    }}>Password</Text>\r\n                    <View style={{\r\n                        height: 50,\r\n                        margin: 20,\r\n                        borderWidth: 1,\r\n                        padding: 10,\r\n                        borderRadius: 30,\r\n                        flexDirection: 'row',\r\n                    }}>\r\n                        <TextInput\r\n                            style={{\r\n                                height: 50,\r\n                                borderRadius: 30,\r\n                                marginTop: -10,\r\n                                width: '95%'\r\n                            }}\r\n                            secureTextEntry={visible}\r\n                        />\r\n                        <View style={{\r\n                            marginLeft:-10,\r\n                        }}>\r\n                            \r\n                            {\r\n                                visible?(\r\n                                    <Ionicons onPress={()=>setVisible(false)} name=\"eye-off-outline\" size={24} color=\"black\" />\r\n                                ):(\r\n                                    <Ionicons onPress={()=>setVisible(true)} name=\"eye-outline\" size={24} color=\"black\" />\r\n                                )\r\n                            }\r\n                        </View>\r\n                    </View>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        color: 'rgb(100,100,100)',\r\n                        marginLeft: '10%'\r\n                    }}>Must be atleast 8 characters.</Text>\r\n                </View>\r\n\r\n                <View >\r\n                    <Text style={{\r\n                        marginTop: '10%',\r\n                        marginLeft: '10%',\r\n                        fontSize: 20,\r\n                        color: 'rgb(100,100,100)',\r\n                    }}>Confirm Password</Text>\r\n                    <View>\r\n                        <TextInput\r\n                            style={{\r\n                                height: 50,\r\n                                margin: 20,\r\n                                borderWidth: 1,\r\n                                padding: 10,\r\n                                borderRadius: 30,\r\n                            }}\r\n                            placeholder=\"\"\r\n                            secureTextEntry={true}\r\n\r\n                        />\r\n\r\n                    </View>\r\n                    <Text style={{\r\n                        fontSize: 15,\r\n                        color: 'rgb(100,100,100)',\r\n                        marginLeft: '10%'\r\n                    }}>Both passwords must match.</Text>\r\n                </View>\r\n\r\n                <TouchableOpacity >\r\n                    <View style={{\r\n                        height: 50,\r\n                        margin: 12,\r\n                        padding: 10,\r\n                        borderWidth: 1,\r\n                        borderColor: 'red',\r\n                        borderRadius: 30,\r\n                        marginTop: '30%',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <Text style={{\r\n                            color: 'red',\r\n                            fontSize: 20,\r\n                        }}>RESET PASSWORD</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}\r\nconst ConfirmMessage = () => {\r\n    return (\r\n        <View>\r\n            <ScrollView>\r\n                <View style={{\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    marginTop: 100,\r\n                }}>\r\n                    <AntDesign name=\"checkcircle\" size={100} color=\"red\" />\r\n                    <Text style={{\r\n                        fontSize: 30,\r\n                        fontWeight: \"bold\",\r\n                        marginTop: 20\r\n                    }}>That's It!</Text>\r\n                    <Text style={{\r\n                        fontSize: 20,\r\n                        color: 'rgb(100,100,100)',\r\n                    }}>Your password has been</Text>\r\n                    <Text style={{\r\n                        fontSize: 20,\r\n                        color: 'rgb(100,100,100)',\r\n                    }}>Reset successfully.</Text>\r\n                </View>\r\n\r\n\r\n            </ScrollView>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}