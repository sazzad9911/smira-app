{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { setRating, setCategory } from \"../action\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar window = Dimensions.get('window');\n\nvar Filter = function Filter(props) {\n  var dispatch = useDispatch();\n  return _jsxs(View, {\n    style: {\n      width: window.width - 30,\n      margin: 15,\n      justifyContent: 'center'\n    },\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginBottom: 30\n      },\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Filter\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          dispatch(setRating(null));\n          dispatch(setCategory(null));\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"Clerar All\"\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.headline,\n      children: \"Ratings\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      children: [_jsx(Ratings, {\n        color: \"green\",\n        title: \"5-4\"\n      }), _jsx(Ratings, {\n        color: \"blue\",\n        title: \"4-3\"\n      }), _jsx(Ratings, {\n        color: \"yellow\",\n        title: \"3-2\"\n      }), _jsx(Ratings, {\n        color: \"red\",\n        title: \"2-1\"\n      })]\n    }), _jsx(Text, {\n      style: styles.headline,\n      children: \"Categories\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      children: [_jsx(Category, {\n        title: \"Deluxe\"\n      }), _jsx(Category, {\n        title: \"Villas\"\n      }), _jsx(Category, {\n        title: \"Farm House\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        props.close(false);\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: [styles.headline, {\n          color: '#ffff'\n        }],\n        children: \"APPLY\"\n      })\n    })]\n  });\n};\n\nexport default Filter;\n\nvar Ratings = function Ratings(props) {\n  var ratings = useSelector(function (state) {\n    return state.recentSearch.rating;\n  });\n  var dispatch = useDispatch();\n  return _jsxs(TouchableOpacity, {\n    onPress: function onPress() {\n      dispatch(setRating(props.title[0]));\n    },\n    style: {\n      borderWidth: 1,\n      borderRadius: 20,\n      width: 100,\n      height: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      margin: 5,\n      backgroundColor: ratings == props.title[0] ? 'rgba(73, 246, 5, 0.269)' : '#ffff'\n    },\n    children: [_jsx(AntDesign, {\n      name: \"star\",\n      size: 18,\n      color: props.color\n    }), _jsx(Text, {\n      style: {\n        marginLeft: 5\n      },\n      children: props.title\n    })]\n  });\n};\n\nvar Category = function Category(props) {\n  var category = useSelector(function (state) {\n    return state.recentSearch.category;\n  });\n  var dispatch = useDispatch();\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      dispatch(setCategory(props.title));\n    },\n    style: {\n      borderWidth: 1,\n      borderRadius: 20,\n      width: 100,\n      height: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n      margin: 5,\n      backgroundColor: category == props.title ? 'rgba(73, 246, 5, 0.269)' : '#ffff'\n    },\n    children: _jsx(Text, {\n      style: {\n        marginLeft: 5\n      },\n      children: props.title\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 20,\n    fontWeight: '800',\n    margin: 5\n  },\n  headline: {\n    fontSize: 16,\n    margin: 5\n  },\n  button: {\n    backgroundColor: '#FC444B',\n    width: window.width - 30,\n    height: 50,\n    borderRadius: 30,\n    marginVertical: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#ffff',\n    marginTop: '10%'\n  }\n});","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/components/Filter.js"],"names":["React","AntDesign","setRating","setCategory","useDispatch","useSelector","window","Dimensions","get","Filter","props","dispatch","width","margin","justifyContent","flexDirection","marginBottom","styles","text","color","headline","flexWrap","close","button","Ratings","ratings","state","recentSearch","rating","title","borderWidth","borderRadius","height","alignItems","backgroundColor","marginLeft","Category","category","StyleSheet","create","fontSize","fontWeight","marginVertical","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, Dimensions, StyleSheet, TouchableOpacity, ScrollView } from 'react-native'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { setRating, setCategory } from '../action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst window = Dimensions.get('window')\r\n\r\nconst Filter = (props) => {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <View style={{\r\n            width: window.width - 30,\r\n            margin: 15,\r\n            justifyContent: 'center',\r\n        }}>\r\n\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 30 }}>\r\n                <Text style={styles.text}>Filter</Text>\r\n                <TouchableOpacity onPress={() => {\r\n                    dispatch(setRating(null))\r\n                    dispatch(setCategory(null))\r\n                }}>\r\n                    <Text style={{ color: 'red' }}>Clerar All</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n            <Text style={styles.headline}>Ratings</Text>\r\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                <Ratings color='green' title='5-4' />\r\n                <Ratings color='blue' title='4-3' />\r\n                <Ratings color='yellow' title='3-2' />\r\n                <Ratings color='red' title='2-1' />\r\n            </View>\r\n            <Text style={styles.headline}>Categories</Text>\r\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                <Category title='Deluxe' />\r\n                <Category title='Villas' />\r\n                <Category title='Farm House' />\r\n            </View>\r\n            <TouchableOpacity onPress={()=>{\r\n                props.close(false)\r\n            }} style={styles.button}>\r\n                <Text style={[styles.headline, { color: '#ffff' }]}>APPLY</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\nconst Ratings = (props) => {\r\n    const ratings = useSelector(state => state.recentSearch.rating)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <TouchableOpacity onPress={() => {\r\n            dispatch(setRating(props.title[0]))\r\n        }} style={{\r\n            borderWidth: 1,\r\n            borderRadius: 20,\r\n            width: 100,\r\n            height: 40,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'row',\r\n            margin: 5,\r\n            backgroundColor: ratings == props.title[0] ? 'rgba(73, 246, 5, 0.269)' : '#ffff'\r\n        }}>\r\n            <AntDesign name=\"star\" size={18} color={props.color} />\r\n            <Text style={{ marginLeft: 5 }}>{props.title}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst Category = (props) => {\r\n    const category = useSelector(state => state.recentSearch.category)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <TouchableOpacity onPress={() => {\r\n            dispatch(setCategory(props.title));\r\n        }} style={{\r\n            borderWidth: 1,\r\n            borderRadius: 20,\r\n            width: 100,\r\n            height: 40,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'row',\r\n            margin: 5,\r\n            backgroundColor: category == props.title ? 'rgba(73, 246, 5, 0.269)' : '#ffff'\r\n        }}>\r\n            <Text style={{ marginLeft: 5 }}>{props.title}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize: 20,\r\n        fontWeight: '800',\r\n        margin: 5,\r\n    },\r\n    headline: {\r\n        fontSize: 16,\r\n        margin: 5\r\n    },\r\n    button: {\r\n        backgroundColor: '#FC444B',\r\n        width: window.width - 30,\r\n        height: 50,\r\n        borderRadius: 30,\r\n        marginVertical: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: '#ffff',\r\n        marginTop: '10%'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}