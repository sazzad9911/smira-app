{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport Rect from \"./Rect\";\nexport { Rect };\nexport var Transform = _createClass(function Transform(scale, translateX, translateY, pivot) {\n  _classCallCheck(this, Transform);\n\n  this.scale = scale;\n  this.translateX = translateX;\n  this.translateY = translateY;\n  this.pivot = pivot;\n});\n\nfunction isValidNumber(number) {\n  if (typeof number === 'number') {\n    if (!isNaN(number)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isValidRect(rect) {\n  if (rect instanceof Rect && rect.isValid()) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isValidTransform(transform) {\n  if (transform && isValidNumber(transform.scale) && isValidNumber(transform.translateX) && isValidNumber(transform.translateY)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function fitCenterRect(contentAspectRatio, containerRect) {\n  var w = containerRect.width();\n  var h = containerRect.height();\n  var viewAspectRatio = w / h;\n\n  if (contentAspectRatio > viewAspectRatio) {\n    h = w / contentAspectRatio;\n  } else {\n    w = h * contentAspectRatio;\n  }\n\n  return new Rect(containerRect.centerX() - w / 2, containerRect.centerY() - h / 2, containerRect.centerX() + w / 2, containerRect.centerY() + h / 2);\n}\nexport function transformedRect(rect, transform) {\n  if (!isValidRect(rect)) {\n    throw new Error('transformedRect...invalid rect');\n  }\n\n  if (!isValidTransform(transform)) {\n    throw new Error('transformedRect...invalid transform');\n  }\n\n  var scale = transform.scale;\n  var translateX = transform.translateX;\n  var translateY = transform.translateY;\n  var pivot = transform.pivot;\n\n  if (pivot === undefined || pivot === null) {\n    var width = rect.width() * scale;\n    var height = rect.height() * scale;\n    var centerX = rect.centerX() + translateX * scale;\n    var centerY = rect.centerY() + translateY * scale;\n    return new Rect(centerX - width / 2, centerY - height / 2, centerX + width / 2, centerY + height / 2);\n  } else {\n    var pivotX = pivot.x;\n    var pivotY = pivot.y;\n\n    if (!isValidNumber(pivotX) || !isValidNumber(pivotY)) {\n      throw new Error('transformedRect...invalid pivot x=' + pivot.x + ', y=' + pivot.y);\n    }\n\n    var resultRect = transformedRect(rect, {\n      scale: scale,\n      translateX: translateX,\n      translateY: translateY\n    });\n    var dx = (scale - 1) * (pivotX - resultRect.centerX());\n    var dy = (scale - 1) * (pivotY - resultRect.centerY());\n    return resultRect.offset(-dx, -dy);\n  }\n}\nexport function getTransform(fromRect, toRect) {\n  var scale = toRect.width() / fromRect.width();\n  var translateX = (toRect.centerX() - fromRect.centerX()) / scale;\n  var translateY = (toRect.centerY() - fromRect.centerY()) / scale;\n  return new Transform(scale, translateX, translateY);\n}\nexport function alignedRect(rect, viewPortRect) {\n  var dx = 0;\n  var dy = 0;\n\n  if (rect.width() > viewPortRect.width()) {\n    if (rect.left > viewPortRect.left) {\n      dx = viewPortRect.left - rect.left;\n    } else if (rect.right < viewPortRect.right) {\n      dx = viewPortRect.right - rect.right;\n    }\n  } else {\n    dx = viewPortRect.centerX() - rect.centerX();\n  }\n\n  if (rect.height() > viewPortRect.height()) {\n    if (rect.top > viewPortRect.top) {\n      dy = viewPortRect.top - rect.top;\n    } else if (rect.bottom < viewPortRect.bottom) {\n      dy = viewPortRect.bottom - rect.bottom;\n    }\n  } else {\n    dy = viewPortRect.centerY() - rect.centerY();\n  }\n\n  return rect.copy().offset(dx, dy);\n}\nexport function availableTranslateSpace(rect, viewPortRect) {\n  return {\n    left: viewPortRect.left - rect.left,\n    right: rect.right - viewPortRect.right,\n    top: viewPortRect.top - rect.top,\n    bottom: rect.bottom - viewPortRect.bottom\n  };\n}","map":{"version":3,"sources":["C:/Users/takia/OneDrive/Desktop/Data/Projects/mobile_app/mobile_app/Handoff/node_modules/react-native-image-gallery/src/libraries/ViewTransformer/TransformUtils.js"],"names":["Rect","Transform","scale","translateX","translateY","pivot","isValidNumber","number","isNaN","isValidRect","rect","isValid","isValidTransform","transform","fitCenterRect","contentAspectRatio","containerRect","w","width","h","height","viewAspectRatio","centerX","centerY","transformedRect","Error","undefined","pivotX","x","pivotY","y","resultRect","dx","dy","offset","getTransform","fromRect","toRect","alignedRect","viewPortRect","left","right","top","bottom","copy","availableTranslateSpace"],"mappings":"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","sourcesContent":["import Rect from './Rect';\n\nexport { Rect };\n\nexport class Transform {\n    constructor (scale, translateX, translateY, pivot) {\n        this.scale = scale;\n        this.translateX = translateX;\n        this.translateY = translateY;\n        this.pivot = pivot;\n    }\n}\n\nfunction isValidNumber (number) {\n    if (typeof number === 'number') {\n        if (!isNaN(number)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isValidRect (rect) {\n    if (rect instanceof Rect && rect.isValid()) {\n        return true;\n    }\n    return false;\n}\n\nfunction isValidTransform (transform) {\n    if (transform && isValidNumber(transform.scale) && isValidNumber(transform.translateX) && isValidNumber(transform.translateY)) {\n        return true;\n    }\n    return false;\n}\n\nexport function fitCenterRect (contentAspectRatio, containerRect) {\n    let w = containerRect.width();\n    let h = containerRect.height();\n    let viewAspectRatio = w / h;\n\n    if (contentAspectRatio > viewAspectRatio) {\n        h = w / contentAspectRatio;\n    } else {\n        w = h * contentAspectRatio;\n    }\n\n    return new Rect(\n    containerRect.centerX() - w / 2,\n    containerRect.centerY() - h / 2,\n    containerRect.centerX() + w / 2,\n    containerRect.centerY() + h / 2\n  );\n}\n\n/**\n * The React Native transform system use the center of the view as the pivot when scaling.\n * The translations are applied before scaling.\n * @param rect\n * @param transform\n * @returns {*}\n */\nexport function transformedRect (rect, transform) {\n    if (!isValidRect(rect)) {\n        throw new Error('transformedRect...invalid rect');\n    }\n    if (!isValidTransform(transform)) {\n        throw new Error('transformedRect...invalid transform');\n    }\n\n    let scale = transform.scale;\n    let translateX = transform.translateX;\n    let translateY = transform.translateY;\n\n    let pivot = transform.pivot;\n    if (pivot === undefined || pivot === null) {\n        let width = rect.width() * scale;\n        let height = rect.height() * scale;\n        let centerX = rect.centerX() + translateX * scale;\n        let centerY = rect.centerY() + translateY * scale;\n\n        return new Rect(\n      centerX - width / 2,\n      centerY - height / 2,\n      centerX + width / 2,\n      centerY + height / 2\n    );\n    } else {\n        let pivotX = pivot.x;\n        let pivotY = pivot.y;\n        if (!isValidNumber(pivotX) || !isValidNumber(pivotY)) {\n            throw new Error('transformedRect...invalid pivot x=' + pivot.x + ', y=' + pivot.y);\n        }\n\n    // first make the center still\n        let resultRect = transformedRect(rect, {\n            scale, translateX, translateY\n        });\n\n    // the pivot moved during scaling, now move it back\n        let dx = (scale - 1) * (pivotX - resultRect.centerX());\n        let dy = (scale - 1) * (pivotY - resultRect.centerY());\n        return resultRect.offset(-dx, -dy);\n    }\n}\n\n/**\n * Calculate the transform from fromRect to toRect\n * @param fromRect\n * @param toRect\n * @returns {Transform}\n */\nexport function getTransform (fromRect, toRect) {\n    let scale = toRect.width() / fromRect.width();\n    let translateX = (toRect.centerX() - fromRect.centerX()) / scale;\n    let translateY = (toRect.centerY() - fromRect.centerY()) / scale;\n\n    return new Transform(scale, translateX, translateY);\n}\n\n/**\n * Align edges of the rect with the viewport to avoid unnecessary blank space. NO scaling is performed here.\n * @param rect\n * @param viewPortRect\n * @returns {*|{line, column}|{column, line}|{x}}\n */\nexport function alignedRect (rect, viewPortRect) {\n    let dx = 0;\n    let dy = 0;\n\n    if (rect.width() > viewPortRect.width()) {\n        if (rect.left > viewPortRect.left) {\n            dx = viewPortRect.left - rect.left;\n        } else if (rect.right < viewPortRect.right) {\n            dx = viewPortRect.right - rect.right;\n        }\n    } else {\n        dx = viewPortRect.centerX() - rect.centerX();\n    }\n\n    if (rect.height() > viewPortRect.height()) {\n        if (rect.top > viewPortRect.top) {\n            dy = viewPortRect.top - rect.top;\n        } else if (rect.bottom < viewPortRect.bottom) {\n            dy = viewPortRect.bottom - rect.bottom;\n        }\n    } else {\n        dy = viewPortRect.centerY() - rect.centerY();\n    }\n\n    return rect.copy().offset(dx, dy);\n}\n\nexport function availableTranslateSpace (rect, viewPortRect) {\n    return {\n        left: viewPortRect.left - rect.left,\n        right: rect.right - viewPortRect.right,\n        top: viewPortRect.top - rect.top,\n        bottom: rect.bottom - viewPortRect.bottom\n    };\n}\n"]},"metadata":{},"sourceType":"module"}